/// <reference types="node" />
export * from "./lib/index";
import * as index from "./lib/index";
declare const _default: {
    XMLDocument: typeof index.XMLDocument;
    HTMLDocument: typeof index.HTMLDocument;
    XMLNode: typeof index.XMLNode;
    XMLElement: typeof index.XMLElement;
    XMLAttribute: typeof index.XMLAttribute;
    XMLNamespace: typeof index.XMLNamespace;
    Document: typeof index.Document;
    Element: typeof index.Element;
    Text: typeof index.Text;
    Comment: typeof index.Comment;
    ProcessingInstruction: typeof index.ProcessingInstruction;
    Namespace: typeof index.Namespace;
    parseXml: (buffer: string | Buffer, options?: index.XMLParseOptions) => index.XMLDocument;
    parseXmlAsync: (buffer: string | Buffer, options?: index.XMLParseOptions) => Promise<index.XMLDocument>;
    parseHtml: (buffer: string | Buffer, options?: index.HTMLParseOptions) => index.HTMLDocument;
    parseHtmlAsync: (buffer: string | Buffer, options?: index.HTMLParseOptions) => Promise<index.HTMLDocument>;
    SaxParser: (callbacks: any) => any;
    SaxPushParser: (callbacks: any) => any;
    XMLStructuredError: typeof index.XMLStructuredError;
    FROM_BUFFER_ASYNC_TYPE: typeof index.FROM_BUFFER_ASYNC_TYPE;
    HTMLParseFlags: typeof index.HTMLParseFlags;
    XMLParseFlags: typeof index.XMLParseFlags;
    DEFAULT_XML_PARSE_OPTIONS: index.XMLParseOptions;
    DEFAULT_HTML_PARSE_OPTIONS: index.HTMLParseOptions;
    XMLDocumentError: typeof index.XMLDocumentError;
    XMLSaveFlags: typeof index.XMLSaveFlags;
    XMLElementType: typeof index.XMLElementType;
    version: any;
    libxml_version: string;
    libxml_parser_version: string;
    libxml_debug_enabled: boolean;
    memoryUsage: () => number;
    nodeCount: () => number;
};
export default _default;
