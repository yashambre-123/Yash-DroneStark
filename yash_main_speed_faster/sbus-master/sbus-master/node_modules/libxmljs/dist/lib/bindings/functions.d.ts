/// <reference types="node" />
export declare const UTF8ToHtml: (out: string | Buffer | null, outlen: number, inArg: string | Buffer | null, inlen: number) => number, UTF8Toisolat1: (out: string | Buffer | null, outlen: number, inArg: string | Buffer | null, inlen: number) => number, __docbDefaultSAXHandler: () => {}, __htmlDefaultSAXHandler: () => {}, __oldXMLWDcompatibility: () => number, __xmlBufferAllocScheme: () => {}, __xmlDefaultBufferSize: () => number, __xmlDefaultSAXHandler: () => {}, __xmlDefaultSAXLocator: () => {}, __xmlDeregisterNodeDefaultValue: () => {}, __xmlDoValidityCheckingDefaultValue: () => number, __xmlGenericError: () => {}, __xmlGenericErrorContext: () => any, __xmlGetWarningsDefaultValue: () => number, __xmlIndentTreeOutput: () => number, __xmlKeepBlanksDefaultValue: () => number, __xmlLastError: () => {}, __xmlLineNumbersDefaultValue: () => number, __xmlLoadExtDtdDefaultValue: () => number, __xmlOutputBufferCreateFilename: (URI: string | Buffer | null, encoder: import("./types").xmlCharEncodingHandlerPtr | null, compression: number) => import("./types").xmlOutputBufferPtr, __xmlOutputBufferCreateFilenameValue: () => {}, __xmlParserDebugEntities: () => number, __xmlParserInputBufferCreateFilename: (URI: string | Buffer | null, enc: {}) => import("./types").xmlParserInputBufferPtr, __xmlParserInputBufferCreateFilenameValue: () => {}, __xmlParserVersion: () => string, __xmlPedanticParserDefaultValue: () => number, __xmlRegisterNodeDefaultValue: () => {}, __xmlSaveNoEmptyTags: () => number, __xmlStructuredError: () => {}, __xmlStructuredErrorContext: () => any, __xmlSubstituteEntitiesDefaultValue: () => number, __xmlTreeIndentString: () => string, attribute: (ctx: any, fullname: string | Buffer | null, value: string | Buffer | null) => any, attributeDecl: (ctx: any, elem: string | Buffer | null, fullname: string | Buffer | null, type: number, def: number, defaultValue: string | Buffer | null, tree: import("./types").xmlEnumerationPtr | null) => any, cdataBlock: (ctx: any, value: string | Buffer | null, len: number) => any, characters: (ctx: any, ch: string | Buffer | null, len: number) => any, checkNamespace: (ctx: any, nameSpace: string | Buffer | null) => number, comment: (ctx: any, value: string | Buffer | null) => any, docbDefaultSAXHandlerInit: () => any, elementDecl: (ctx: any, name: string | Buffer | null, type: number, content: import("./types").xmlElementContentPtr | null) => any, endDocument: (ctx: any) => any, endElement: (ctx: any, name: string | Buffer | null) => any, entityDecl: (ctx: any, name: string | Buffer | null, type: number, publicId: string | Buffer | null, systemId: string | Buffer | null, content: string | Buffer | null) => any, externalSubset: (ctx: any, name: string | Buffer | null, ExternalID: string | Buffer | null, SystemID: string | Buffer | null) => any, getColumnNumber: (ctx: any) => number, getEntity: (ctx: any, name: string | Buffer | null) => import("./types").xmlEntityPtr, getLineNumber: (ctx: any) => number, getMemUsed: () => number, getNamespace: (ctx: any) => import("./types").xmlNsPtr | null, getNodeCount: () => number, getParameterEntity: (ctx: any, name: string | Buffer | null) => import("./types").xmlEntityPtr, getPublicId: (ctx: any) => string, getSystemId: (ctx: any) => string, getWrapCount: () => number, globalNamespace: (ctx: any, href: string | Buffer | null, prefix: string | Buffer | null) => any, hasExternalSubset: (ctx: any) => number, hasInternalSubset: (ctx: any) => number, htmlAttrAllowed: (arg0: import("./types").htmlElemDescPtr | null, arg1: string | Buffer | null, arg2: number) => {}, htmlAutoCloseTag: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null, elem: import("./types").htmlNodePtr | null) => number, htmlCreateFileParserCtxt: (filename: string | Buffer | null, encoding: string | Buffer | null) => import("./types").htmlParserCtxtPtr, htmlCreateMemoryParserCtxt: (buffer: string | Buffer | null, size: number) => import("./types").htmlParserCtxtPtr, htmlCreatePushParserCtxt: (sax: import("./types").htmlSAXHandlerPtr | null, user_data: any, chunk: string | Buffer | null, size: number, filename: string | Buffer | null, enc: {}) => import("./types").htmlParserCtxtPtr, htmlCtxtReadDoc: (ctxt: import("./types").xmlParserCtxtPtr | null, cur: string | Buffer | null, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, htmlCtxtReadFd: (ctxt: import("./types").xmlParserCtxtPtr | null, fd: number, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, htmlCtxtReadFile: (ctxt: import("./types").xmlParserCtxtPtr | null, filename: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, htmlCtxtReadIO: (ctxt: import("./types").xmlParserCtxtPtr | null, ioread: {}, ioclose: {}, ioctx: any, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, htmlCtxtReadMemory: (ctxt: import("./types").xmlParserCtxtPtr | null, buffer: string | Buffer | null, size: number, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, htmlCtxtReset: (ctxt: import("./types").htmlParserCtxtPtr | null) => any, htmlCtxtUseOptions: (ctxt: import("./types").htmlParserCtxtPtr | null, options: number) => number, htmlDefaultSAXHandlerInit: () => any, htmlDocContentDumpFormatOutput: (buf: import("./types").xmlOutputBufferPtr | null, cur: import("./types").xmlDocPtr | null, encoding: string | Buffer | null, format: number) => any, htmlDocContentDumpOutput: (buf: import("./types").xmlOutputBufferPtr | null, cur: import("./types").xmlDocPtr | null, encoding: string | Buffer | null) => any, htmlDocDump: (f: undefined, cur: import("./types").xmlDocPtr | null) => number, htmlDocDumpMemory: (cur: import("./types").xmlDocPtr | null, mem: string | Buffer | null, size: number) => any, htmlDocDumpMemoryFormat: (cur: import("./types").xmlDocPtr | null, mem: string | Buffer | null, size: number, format: number) => any, htmlElementAllowedHere: (arg0: import("./types").htmlElemDescPtr | null, arg1: string | Buffer | null) => number, htmlElementStatusHere: (arg0: import("./types").htmlElemDescPtr | null, arg1: import("./types").htmlElemDescPtr | null) => {}, htmlEncodeEntities: (out: string | Buffer | null, outlen: number, inArg: string | Buffer | null, inlen: number, quoteChar: number) => number, htmlEntityLookup: (name: string | Buffer | null) => {}, htmlEntityValueLookup: (value: number) => {}, htmlFreeParserCtxt: (ctxt: import("./types").htmlParserCtxtPtr | null) => any, htmlGetMetaEncoding: (doc: import("./types").xmlDocPtr | null) => string, htmlHandleOmittedElem: (val: number) => number, htmlInitAutoClose: () => any, htmlIsAutoClosed: (doc: import("./types").xmlDocPtr | null, elem: import("./types").htmlNodePtr | null) => number, htmlIsBooleanAttr: (name: string | Buffer | null) => number, htmlIsScriptAttribute: (name: string | Buffer | null) => number, htmlNewDoc: (URI: string | Buffer | null, ExternalID: string | Buffer | null) => import("./types").xmlDocPtr | null, htmlNewDocNoDtD: (URI: string | Buffer | null, ExternalID: string | Buffer | null) => import("./types").xmlDocPtr | null, htmlNewParserCtxt: () => import("./types").htmlParserCtxtPtr, htmlNodeDump: (buf: import("./types").xmlBufferPtr | null, doc: import("./types").xmlDocPtr | null, cur: import("./types").xmlNodePtr | null) => number, htmlNodeDumpFile: (out: undefined, doc: import("./types").xmlDocPtr | null, cur: import("./types").xmlNodePtr | null) => any, htmlNodeDumpFileFormat: (out: undefined, doc: import("./types").xmlDocPtr | null, cur: import("./types").xmlNodePtr | null, encoding: string | Buffer | null, format: number) => number, htmlNodeDumpFormatOutput: (buf: import("./types").xmlOutputBufferPtr | null, doc: import("./types").xmlDocPtr | null, cur: import("./types").xmlNodePtr | null, encoding: string | Buffer | null, format: number) => any, htmlNodeDumpOutput: (buf: import("./types").xmlOutputBufferPtr | null, doc: import("./types").xmlDocPtr | null, cur: import("./types").xmlNodePtr | null, encoding: string | Buffer | null) => any, htmlNodeStatus: (arg0: import("./types").htmlNodePtr | null, arg1: number) => {}, htmlParseCharRef: (ctxt: import("./types").htmlParserCtxtPtr | null) => number, htmlParseChunk: (ctxt: import("./types").htmlParserCtxtPtr | null, chunk: string | Buffer | null, size: number, terminate: number) => number, htmlParseDoc: (cur: string | Buffer | null, encoding: string | Buffer | null) => import("./types").xmlDocPtr | null, htmlParseDocument: (ctxt: import("./types").htmlParserCtxtPtr | null) => number, htmlParseElement: (ctxt: import("./types").htmlParserCtxtPtr | null) => any, htmlParseEntityRef: (ctxt: import("./types").htmlParserCtxtPtr | null, str: string | Buffer | null) => {}, htmlParseFile: (filename: string | Buffer | null, encoding: string | Buffer | null) => import("./types").xmlDocPtr | null, htmlReadDoc: (cur: string | Buffer | null, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, htmlReadFd: (fd: number, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, htmlReadFile: (URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, htmlReadIO: (ioread: {}, ioclose: {}, ioctx: any, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, htmlReadMemory: (buffer: string | Buffer | null, size: number, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, htmlSAXParseDoc: (cur: string | Buffer | null, encoding: string | Buffer | null, sax: import("./types").htmlSAXHandlerPtr | null, userData: any) => import("./types").xmlDocPtr | null, htmlSAXParseFile: (filename: string | Buffer | null, encoding: string | Buffer | null, sax: import("./types").htmlSAXHandlerPtr | null, userData: any) => import("./types").xmlDocPtr | null, htmlSaveFile: (filename: string | Buffer | null, cur: import("./types").xmlDocPtr | null) => number, htmlSaveFileEnc: (filename: string | Buffer | null, cur: import("./types").xmlDocPtr | null, encoding: string | Buffer | null) => number, htmlSaveFileFormat: (filename: string | Buffer | null, cur: import("./types").xmlDocPtr | null, encoding: string | Buffer | null, format: number) => number, htmlSetMetaEncoding: (doc: import("./types").xmlDocPtr | null, encoding: string | Buffer | null) => number, htmlTagLookup: (tag: string | Buffer | null) => {}, ignorableWhitespace: (ctx: any, ch: string | Buffer | null, len: number) => any, initGenericErrorDefaultFunc: (handler: {}) => any, initdocbDefaultSAXHandler: (hdlr: {}) => any, inithtmlDefaultSAXHandler: (hdlr: {}) => any, initxmlDefaultSAXHandler: (hdlr: {}, warning: number) => any, inputPop: (ctxt: import("./types").xmlParserCtxtPtr | null) => import("./types").xmlParserInputPtr, inputPush: (ctxt: import("./types").xmlParserCtxtPtr | null, value: import("./types").xmlParserInputPtr | null) => number, internalSubset: (ctx: any, name: string | Buffer | null, ExternalID: string | Buffer | null, SystemID: string | Buffer | null) => any, isStandalone: (ctx: any) => number, isolat1ToUTF8: (out: string | Buffer | null, outlen: number, inArg: string | Buffer | null, inlen: number) => number, namePop: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, namePush: (ctxt: import("./types").xmlParserCtxtPtr | null, value: string | Buffer | null) => number, namespaceDecl: (ctx: any, href: string | Buffer | null, prefix: string | Buffer | null) => any, nodePop: (ctxt: import("./types").xmlParserCtxtPtr | null) => import("./types").xmlNodePtr | null, nodePush: (ctxt: import("./types").xmlParserCtxtPtr | null, value: import("./types").xmlNodePtr | null) => number, notationDecl: (ctx: any, name: string | Buffer | null, publicId: string | Buffer | null, systemId: string | Buffer | null) => any, processingInstruction: (ctx: any, target: string | Buffer | null, data: string | Buffer | null) => any, reference: (ctx: any, name: string | Buffer | null) => any, resolveEntity: (ctx: any, publicId: string | Buffer | null, systemId: string | Buffer | null) => import("./types").xmlParserInputPtr, setDebugDisable: () => any, setDebugEnable: () => any, setDocumentLocator: (ctx: any, loc: import("./types").xmlSAXLocatorPtr | null) => any, setNamespace: (ctx: any, name: string | Buffer | null) => any, startDocument: (ctx: any) => any, startElement: (ctx: any, fullname: string | Buffer | null, atts: string | Buffer | null) => any, unparsedEntityDecl: (ctx: any, name: string | Buffer | null, publicId: string | Buffer | null, systemId: string | Buffer | null, notationName: string | Buffer | null) => any, valuePop: (ctxt: import("./types").xmlXPathParserContextPtr | null) => import("./types").xmlXPathObjectPtr, valuePush: (ctxt: import("./types").xmlXPathParserContextPtr | null, value: import("./types").xmlXPathObjectPtr | null) => number, xlinkGetDefaultDetect: () => {}, xlinkGetDefaultHandler: () => import("./types").xlinkHandlerPtr, xlinkIsLink: (doc: import("./types").xmlDocPtr | null, node: import("./types").xmlNodePtr | null) => {}, xlinkSetDefaultDetect: (func: {}) => any, xlinkSetDefaultHandler: (handler: import("./types").xlinkHandlerPtr | null) => any, xmlACatalogAdd: (catal: import("./types").xmlCatalogPtr | null, type: string | Buffer | null, orig: string | Buffer | null, replace: string | Buffer | null) => number, xmlACatalogDump: (catal: import("./types").xmlCatalogPtr | null, out: undefined) => any, xmlACatalogRemove: (catal: import("./types").xmlCatalogPtr | null, value: string | Buffer | null) => number, xmlACatalogResolve: (catal: import("./types").xmlCatalogPtr | null, pubID: string | Buffer | null, sysID: string | Buffer | null) => string, xmlACatalogResolvePublic: (catal: import("./types").xmlCatalogPtr | null, pubID: string | Buffer | null) => string, xmlACatalogResolveSystem: (catal: import("./types").xmlCatalogPtr | null, sysID: string | Buffer | null) => string, xmlACatalogResolveURI: (catal: import("./types").xmlCatalogPtr | null, URI: string | Buffer | null) => string, xmlAddAttributeDecl: (ctxt: import("./types").xmlValidCtxtPtr | null, dtd: import("./types").xmlDtdPtr | null, elem: string | Buffer | null, name: string | Buffer | null, ns: string | Buffer | null, type: {}, def: {}, defaultValue: string | Buffer | null, tree: import("./types").xmlEnumerationPtr | null) => import("./types").xmlAttributePtr, xmlAddChild: (parent: import("./types").xmlNodePtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlAddChildList: (parent: import("./types").xmlNodePtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlAddDocEntity: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null, type: number, ExternalID: string | Buffer | null, SystemID: string | Buffer | null, content: string | Buffer | null) => import("./types").xmlEntityPtr, xmlAddDtdEntity: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null, type: number, ExternalID: string | Buffer | null, SystemID: string | Buffer | null, content: string | Buffer | null) => import("./types").xmlEntityPtr, xmlAddElementDecl: (ctxt: import("./types").xmlValidCtxtPtr | null, dtd: import("./types").xmlDtdPtr | null, name: string | Buffer | null, type: {}, content: import("./types").xmlElementContentPtr | null) => import("./types").xmlElementPtr | null, xmlAddEncodingAlias: (name: string | Buffer | null, alias: string | Buffer | null) => number, xmlAddID: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, value: string | Buffer | null, attr: import("./types").xmlAttrPtr | null) => import("./types").xmlIDPtr, xmlAddNextSibling: (cur: import("./types").xmlNodePtr | null, elem: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlAddNotationDecl: (ctxt: import("./types").xmlValidCtxtPtr | null, dtd: import("./types").xmlDtdPtr | null, name: string | Buffer | null, PublicID: string | Buffer | null, SystemID: string | Buffer | null) => import("./types").xmlNotationPtr, xmlAddPrevSibling: (cur: import("./types").xmlNodePtr | null, elem: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlAddRef: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, value: string | Buffer | null, attr: import("./types").xmlAttrPtr | null) => import("./types").xmlRefPtr, xmlAddSibling: (cur: import("./types").xmlNodePtr | null, elem: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlAllocOutputBuffer: (encoder: import("./types").xmlCharEncodingHandlerPtr | null) => import("./types").xmlOutputBufferPtr, xmlAllocParserInputBuffer: (enc: {}) => import("./types").xmlParserInputBufferPtr, xmlAttrSerializeTxtContent: (buf: import("./types").xmlBufferPtr | null, doc: import("./types").xmlDocPtr | null, attr: import("./types").xmlAttrPtr | null, string: string | Buffer | null) => any, xmlAutomataCompile: (am: import("./types").xmlAutomataPtr | null) => import("./types").xmlRegexpPtr, xmlAutomataGetInitState: (am: import("./types").xmlAutomataPtr | null) => import("./types").xmlAutomataStatePtr, xmlAutomataIsDeterminist: (am: import("./types").xmlAutomataPtr | null) => number, xmlAutomataNewAllTrans: (am: import("./types").xmlAutomataPtr | null, from: import("./types").xmlAutomataStatePtr | null, to: import("./types").xmlAutomataStatePtr | null, lax: number) => import("./types").xmlAutomataStatePtr, xmlAutomataNewCountTrans: (am: import("./types").xmlAutomataPtr | null, from: import("./types").xmlAutomataStatePtr | null, to: import("./types").xmlAutomataStatePtr | null, token: string | Buffer | null, min: number, max: number, data: any) => import("./types").xmlAutomataStatePtr, xmlAutomataNewCountTrans2: (am: import("./types").xmlAutomataPtr | null, from: import("./types").xmlAutomataStatePtr | null, to: import("./types").xmlAutomataStatePtr | null, token: string | Buffer | null, token2: string | Buffer | null, min: number, max: number, data: any) => import("./types").xmlAutomataStatePtr, xmlAutomataNewCountedTrans: (am: import("./types").xmlAutomataPtr | null, from: import("./types").xmlAutomataStatePtr | null, to: import("./types").xmlAutomataStatePtr | null, counter: number) => import("./types").xmlAutomataStatePtr, xmlAutomataNewCounter: (am: import("./types").xmlAutomataPtr | null, min: number, max: number) => number, xmlAutomataNewCounterTrans: (am: import("./types").xmlAutomataPtr | null, from: import("./types").xmlAutomataStatePtr | null, to: import("./types").xmlAutomataStatePtr | null, counter: number) => import("./types").xmlAutomataStatePtr, xmlAutomataNewEpsilon: (am: import("./types").xmlAutomataPtr | null, from: import("./types").xmlAutomataStatePtr | null, to: import("./types").xmlAutomataStatePtr | null) => import("./types").xmlAutomataStatePtr, xmlAutomataNewNegTrans: (am: import("./types").xmlAutomataPtr | null, from: import("./types").xmlAutomataStatePtr | null, to: import("./types").xmlAutomataStatePtr | null, token: string | Buffer | null, token2: string | Buffer | null, data: any) => import("./types").xmlAutomataStatePtr, xmlAutomataNewOnceTrans: (am: import("./types").xmlAutomataPtr | null, from: import("./types").xmlAutomataStatePtr | null, to: import("./types").xmlAutomataStatePtr | null, token: string | Buffer | null, min: number, max: number, data: any) => import("./types").xmlAutomataStatePtr, xmlAutomataNewOnceTrans2: (am: import("./types").xmlAutomataPtr | null, from: import("./types").xmlAutomataStatePtr | null, to: import("./types").xmlAutomataStatePtr | null, token: string | Buffer | null, token2: string | Buffer | null, min: number, max: number, data: any) => import("./types").xmlAutomataStatePtr, xmlAutomataNewState: (am: import("./types").xmlAutomataPtr | null) => import("./types").xmlAutomataStatePtr, xmlAutomataNewTransition: (am: import("./types").xmlAutomataPtr | null, from: import("./types").xmlAutomataStatePtr | null, to: import("./types").xmlAutomataStatePtr | null, token: string | Buffer | null, data: any) => import("./types").xmlAutomataStatePtr, xmlAutomataNewTransition2: (am: import("./types").xmlAutomataPtr | null, from: import("./types").xmlAutomataStatePtr | null, to: import("./types").xmlAutomataStatePtr | null, token: string | Buffer | null, token2: string | Buffer | null, data: any) => import("./types").xmlAutomataStatePtr, xmlAutomataSetFinalState: (am: import("./types").xmlAutomataPtr | null, state: import("./types").xmlAutomataStatePtr | null) => number, xmlBufContent: (buf: import("./types").xmlBufPtr | null) => string, xmlBufEnd: (buf: import("./types").xmlBufPtr | null) => string, xmlBufGetNodeContent: (buf: import("./types").xmlBufPtr | null, cur: import("./types").xmlNodePtr | null) => number, xmlBufNodeDump: (buf: import("./types").xmlBufPtr | null, doc: import("./types").xmlDocPtr | null, cur: import("./types").xmlNodePtr | null, level: number, format: number) => number, xmlBufShrink: (buf: import("./types").xmlBufPtr | null, len: number) => number, xmlBufUse: (buf: import("./types").xmlBufPtr | null) => number, xmlBufferAdd: (buf: import("./types").xmlBufferPtr | null, str: string | Buffer | null, len: number) => number, xmlBufferAddHead: (buf: import("./types").xmlBufferPtr | null, str: string | Buffer | null, len: number) => number, xmlBufferCCat: (buf: import("./types").xmlBufferPtr | null, str: string | Buffer | null) => number, xmlBufferCat: (buf: import("./types").xmlBufferPtr | null, str: string | Buffer | null) => number, xmlBufferContent: (buf: import("./types").xmlBufferPtr | null) => string, xmlBufferCreate: () => import("./types").xmlBufferPtr, xmlBufferCreateSize: (size: number) => import("./types").xmlBufferPtr, xmlBufferCreateStatic: (mem: any, size: number) => import("./types").xmlBufferPtr, xmlBufferDetach: (buf: import("./types").xmlBufferPtr | null) => string, xmlBufferDump: (file: undefined, buf: import("./types").xmlBufferPtr | null) => number, xmlBufferEmpty: (buf: import("./types").xmlBufferPtr | null) => any, xmlBufferFree: (buf: import("./types").xmlBufferPtr | null) => any, xmlBufferGrow: (buf: import("./types").xmlBufferPtr | null, len: number) => number, xmlBufferLength: (buf: import("./types").xmlBufferPtr | null) => number, xmlBufferResize: (buf: import("./types").xmlBufferPtr | null, size: number) => number, xmlBufferSetAllocationScheme: (buf: import("./types").xmlBufferPtr | null, scheme: {}) => any, xmlBufferShrink: (buf: import("./types").xmlBufferPtr | null, len: number) => number, xmlBufferWriteCHAR: (buf: import("./types").xmlBufferPtr | null, string: string | Buffer | null) => any, xmlBufferWriteChar: (buf: import("./types").xmlBufferPtr | null, string: string | Buffer | null) => any, xmlBufferWriteQuotedString: (buf: import("./types").xmlBufferPtr | null, string: string | Buffer | null) => any, xmlBuildQName: (ncname: string | Buffer | null, prefix: string | Buffer | null, memory: string | Buffer | null, len: number) => string, xmlBuildRelativeURI: (URI: string | Buffer | null, base: string | Buffer | null) => string, xmlBuildURI: (URI: string | Buffer | null, base: string | Buffer | null) => string, xmlByteConsumed: (ctxt: import("./types").xmlParserCtxtPtr | null) => number, xmlCanonicPath: (path: string | Buffer | null) => string, xmlCatalogAdd: (type: string | Buffer | null, orig: string | Buffer | null, replace: string | Buffer | null) => number, xmlCatalogAddLocal: (catalogs: any, URL: string | Buffer | null) => any, xmlCatalogCleanup: () => any, xmlCatalogConvert: () => number, xmlCatalogDump: (out: undefined) => any, xmlCatalogFreeLocal: (catalogs: any) => any, xmlCatalogGetDefaults: () => {}, xmlCatalogGetPublic: (pubID: string | Buffer | null) => string, xmlCatalogGetSystem: (sysID: string | Buffer | null) => string, xmlCatalogIsEmpty: (catal: import("./types").xmlCatalogPtr | null) => number, xmlCatalogLocalResolve: (catalogs: any, pubID: string | Buffer | null, sysID: string | Buffer | null) => string, xmlCatalogLocalResolveURI: (catalogs: any, URI: string | Buffer | null) => string, xmlCatalogRemove: (value: string | Buffer | null) => number, xmlCatalogResolve: (pubID: string | Buffer | null, sysID: string | Buffer | null) => string, xmlCatalogResolvePublic: (pubID: string | Buffer | null) => string, xmlCatalogResolveSystem: (sysID: string | Buffer | null) => string, xmlCatalogResolveURI: (URI: string | Buffer | null) => string, xmlCatalogSetDebug: (level: number) => number, xmlCatalogSetDefaultPrefer: (prefer: {}) => {}, xmlCatalogSetDefaults: (allow: {}) => any, xmlCharEncCloseFunc: (handler: {}) => number, xmlCharEncFirstLine: (handler: {}, out: import("./types").xmlBufferPtr | null, inArg: import("./types").xmlBufferPtr | null) => number, xmlCharEncInFunc: (handler: {}, out: import("./types").xmlBufferPtr | null, inArg: import("./types").xmlBufferPtr | null) => number, xmlCharEncOutFunc: (handler: {}, out: import("./types").xmlBufferPtr | null, inArg: import("./types").xmlBufferPtr | null) => number, xmlCharInRange: (val: number, group: import("./types").xmlChRangeGroupPtr | null) => number, xmlCharStrdup: (cur: string | Buffer | null) => string, xmlCharStrndup: (cur: string | Buffer | null, len: number) => string, xmlCheckFilename: (path: string | Buffer | null) => number, xmlCheckHTTPInput: (ctxt: import("./types").xmlParserCtxtPtr | null, ret: import("./types").xmlParserInputPtr | null) => import("./types").xmlParserInputPtr, xmlCheckLanguageID: (lang: string | Buffer | null) => number, xmlCheckUTF8: (utf: string | Buffer | null) => number, xmlCheckVersion: (version: number) => any, xmlChildElementCount: (parent: import("./types").xmlNodePtr | null) => number, xmlCleanupCharEncodingHandlers: () => any, xmlCleanupEncodingAliases: () => any, xmlCleanupGlobals: () => any, xmlCleanupInputCallbacks: () => any, xmlCleanupMemory: () => any, xmlCleanupOutputCallbacks: () => any, xmlCleanupParser: () => any, xmlCleanupPredefinedEntities: () => any, xmlCleanupThreads: () => any, xmlClearNodeInfoSeq: (seq: import("./types").xmlParserNodeInfoSeqPtr | null) => any, xmlClearParserCtxt: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlConvertSGMLCatalog: (catal: import("./types").xmlCatalogPtr | null) => number, xmlCopyAttributeTable: (table: import("./types").xmlAttributeTablePtr | null) => import("./types").xmlAttributeTablePtr, xmlCopyChar: (len: number, out: string | Buffer | null, val: number) => number, xmlCopyCharMultiByte: (out: string | Buffer | null, val: number) => number, xmlCopyDoc: (doc: import("./types").xmlDocPtr | null, recursive: number) => import("./types").xmlDocPtr | null, xmlCopyDocElementContent: (doc: import("./types").xmlDocPtr | null, content: import("./types").xmlElementContentPtr | null) => import("./types").xmlElementContentPtr, xmlCopyDtd: (dtd: import("./types").xmlDtdPtr | null) => import("./types").xmlDtdPtr | null, xmlCopyElementContent: (content: import("./types").xmlElementContentPtr | null) => import("./types").xmlElementContentPtr, xmlCopyElementTable: (table: import("./types").xmlElementTablePtr | null) => import("./types").xmlElementTablePtr, xmlCopyEntitiesTable: (table: import("./types").xmlEntitiesTablePtr | null) => import("./types").xmlEntitiesTablePtr, xmlCopyEnumeration: (cur: import("./types").xmlEnumerationPtr | null) => import("./types").xmlEnumerationPtr, xmlCopyError: (from: import("./types").xmlErrorPtr | null, to: import("./types").xmlErrorPtr | null) => number, xmlCopyNamespace: (cur: import("./types").xmlNsPtr | null) => import("./types").xmlNsPtr | null, xmlCopyNamespaceList: (cur: import("./types").xmlNsPtr | null) => import("./types").xmlNsPtr | null, xmlCopyNode: (node: import("./types").xmlNodePtr | null, recursive: number) => import("./types").xmlNodePtr | null, xmlCopyNodeList: (node: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlCopyNotationTable: (table: import("./types").xmlNotationTablePtr | null) => import("./types").xmlNotationTablePtr, xmlCopyProp: (target: import("./types").xmlNodePtr | null, cur: import("./types").xmlAttrPtr | null) => import("./types").xmlAttrPtr | null, xmlCopyPropList: (target: import("./types").xmlNodePtr | null, cur: import("./types").xmlAttrPtr | null) => import("./types").xmlAttrPtr | null, xmlCreateDocParserCtxt: (cur: string | Buffer | null) => import("./types").xmlParserCtxtPtr, xmlCreateEntitiesTable: () => import("./types").xmlEntitiesTablePtr, xmlCreateEntityParserCtxt: (URL: string | Buffer | null, ID: string | Buffer | null, base: string | Buffer | null) => import("./types").xmlParserCtxtPtr, xmlCreateEnumeration: (name: string | Buffer | null) => import("./types").xmlEnumerationPtr, xmlCreateFileParserCtxt: (filename: string | Buffer | null) => import("./types").xmlParserCtxtPtr, xmlCreateIOParserCtxt: (sax: import("./types").xmlSAXHandlerPtr | null, user_data: any, ioread: {}, ioclose: {}, ioctx: any, enc: {}) => import("./types").xmlParserCtxtPtr, xmlCreateIntSubset: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null, ExternalID: string | Buffer | null, SystemID: string | Buffer | null) => import("./types").xmlDtdPtr | null, xmlCreateMemoryParserCtxt: (buffer: string | Buffer | null, size: number) => import("./types").xmlParserCtxtPtr, xmlCreatePushParserCtxt: (sax: import("./types").xmlSAXHandlerPtr | null, user_data: any, chunk: string | Buffer | null, size: number, filename: string | Buffer | null) => import("./types").xmlParserCtxtPtr, xmlCreateURI: () => import("./types").xmlURIPtr, xmlCreateURLParserCtxt: (filename: string | Buffer | null, options: number) => import("./types").xmlParserCtxtPtr, xmlCtxtGetLastError: (ctx: any) => import("./types").xmlErrorPtr, xmlCtxtReadDoc: (ctxt: import("./types").xmlParserCtxtPtr | null, cur: string | Buffer | null, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, xmlCtxtReadFd: (ctxt: import("./types").xmlParserCtxtPtr | null, fd: number, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, xmlCtxtReadFile: (ctxt: import("./types").xmlParserCtxtPtr | null, filename: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, xmlCtxtReadIO: (ctxt: import("./types").xmlParserCtxtPtr | null, ioread: {}, ioclose: {}, ioctx: any, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, xmlCtxtReadMemory: (ctxt: import("./types").xmlParserCtxtPtr | null, buffer: string | Buffer | null, size: number, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, xmlCtxtReset: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlCtxtResetLastError: (ctx: any) => any, xmlCtxtResetPush: (ctxt: import("./types").xmlParserCtxtPtr | null, chunk: string | Buffer | null, size: number, filename: string | Buffer | null, encoding: string | Buffer | null) => number, xmlCtxtUseOptions: (ctxt: import("./types").xmlParserCtxtPtr | null, options: number) => number, xmlCurrentChar: (ctxt: import("./types").xmlParserCtxtPtr | null, len: number) => number, xmlDOMWrapAdoptNode: (ctxt: import("./types").xmlDOMWrapCtxtPtr | null, sourceDoc: import("./types").xmlDocPtr | null, node: import("./types").xmlNodePtr | null, destDoc: import("./types").xmlDocPtr | null, destParent: import("./types").xmlNodePtr | null, options: number) => number, xmlDOMWrapCloneNode: (ctxt: import("./types").xmlDOMWrapCtxtPtr | null, sourceDoc: import("./types").xmlDocPtr | null, node: import("./types").xmlNodePtr | null, clonedNode: import("./types").xmlNodePtr | null, destDoc: import("./types").xmlDocPtr | null, destParent: import("./types").xmlNodePtr | null, deep: number, options: number) => number, xmlDOMWrapFreeCtxt: (ctxt: import("./types").xmlDOMWrapCtxtPtr | null) => any, xmlDOMWrapNewCtxt: () => import("./types").xmlDOMWrapCtxtPtr, xmlDOMWrapReconcileNamespaces: (ctxt: import("./types").xmlDOMWrapCtxtPtr | null, elem: import("./types").xmlNodePtr | null, options: number) => number, xmlDOMWrapRemoveNode: (ctxt: import("./types").xmlDOMWrapCtxtPtr | null, doc: import("./types").xmlDocPtr | null, node: import("./types").xmlNodePtr | null, options: number) => number, xmlDecodeEntities: (ctxt: import("./types").xmlParserCtxtPtr | null, len: number, what: number, end: string | Buffer | null, end2: string | Buffer | null, end3: string | Buffer | null) => string, xmlDefaultSAXHandlerInit: () => any, xmlDelEncodingAlias: (alias: string | Buffer | null) => number, xmlDeregisterNodeDefault: (func: {}) => {}, xmlDetectCharEncoding: (inArg: string | Buffer | null, len: number) => {}, xmlDictCleanup: () => any, xmlDictCreate: () => import("./types").xmlDictPtr, xmlDictCreateSub: (sub: import("./types").xmlDictPtr | null) => import("./types").xmlDictPtr, xmlDictExists: (dict: import("./types").xmlDictPtr | null, name: string | Buffer | null, len: number) => string, xmlDictFree: (dict: import("./types").xmlDictPtr | null) => any, xmlDictGetUsage: (dict: import("./types").xmlDictPtr | null) => number, xmlDictLookup: (dict: import("./types").xmlDictPtr | null, name: string | Buffer | null, len: number) => string, xmlDictOwns: (dict: import("./types").xmlDictPtr | null, str: string | Buffer | null) => number, xmlDictQLookup: (dict: import("./types").xmlDictPtr | null, prefix: string | Buffer | null, name: string | Buffer | null) => string, xmlDictReference: (dict: import("./types").xmlDictPtr | null) => number, xmlDictSetLimit: (dict: import("./types").xmlDictPtr | null, limit: number) => number, xmlDictSize: (dict: import("./types").xmlDictPtr | null) => number, xmlDocCopyNode: (node: import("./types").xmlNodePtr | null, doc: import("./types").xmlDocPtr | null, recursive: number) => import("./types").xmlNodePtr | null, xmlDocCopyNodeList: (doc: import("./types").xmlDocPtr | null, node: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlDocDump: (f: undefined, cur: import("./types").xmlDocPtr | null) => number, xmlDocDumpFormatMemory: (cur: import("./types").xmlDocPtr | null, mem: string | Buffer | null, size: number, format: number) => any, xmlDocDumpFormatMemoryEnc: (out_doc: import("./types").xmlDocPtr | null, doc_txt_ptr: string | Buffer | null, doc_txt_len: number, txt_encoding: string | Buffer | null, format: number) => any, xmlDocDumpMemory: (cur: import("./types").xmlDocPtr | null, mem: string | Buffer | null, size: number) => any, xmlDocDumpMemoryEnc: (out_doc: import("./types").xmlDocPtr | null, doc_txt_ptr: string | Buffer | null, doc_txt_len: number, txt_encoding: string | Buffer | null) => any, xmlDocFormatDump: (f: undefined, cur: import("./types").xmlDocPtr | null, format: number) => number, xmlDocGetRootElement: (doc: import("./types").xmlDocPtr | null) => import("./types").xmlNodePtr | null, xmlDocHasRootElement: (doc: import("./types").xmlDocPtr | null) => boolean, xmlDocSetRootElement: (doc: import("./types").xmlDocPtr | null, root: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlDumpAttributeDecl: (buf: import("./types").xmlBufferPtr | null, attr: import("./types").xmlAttributePtr | null) => any, xmlDumpAttributeTable: (buf: import("./types").xmlBufferPtr | null, table: import("./types").xmlAttributeTablePtr | null) => any, xmlDumpElementDecl: (buf: import("./types").xmlBufferPtr | null, elem: import("./types").xmlElementPtr | null) => any, xmlDumpElementTable: (buf: import("./types").xmlBufferPtr | null, table: import("./types").xmlElementTablePtr | null) => any, xmlDumpEntitiesTable: (buf: import("./types").xmlBufferPtr | null, table: import("./types").xmlEntitiesTablePtr | null) => any, xmlDumpEntityDecl: (buf: import("./types").xmlBufferPtr | null, ent: import("./types").xmlEntityPtr | null) => any, xmlDumpNotationDecl: (buf: import("./types").xmlBufferPtr | null, nota: import("./types").xmlNotationPtr | null) => any, xmlDumpNotationTable: (buf: import("./types").xmlBufferPtr | null, table: import("./types").xmlNotationTablePtr | null) => any, xmlElemDump: (f: undefined, doc: import("./types").xmlDocPtr | null, cur: import("./types").xmlNodePtr | null) => any, xmlEncodeEntities: (doc: import("./types").xmlDocPtr | null, input: string | Buffer | null) => string, xmlEncodeEntitiesReentrant: (doc: import("./types").xmlDocPtr | null, input: string | Buffer | null) => string, xmlEncodeSpecialChars: (doc: import("./types").xmlDocPtr | null, input: string | Buffer | null) => string, xmlExpCtxtNbCons: (ctxt: import("./types").xmlExpCtxtPtr | null) => number, xmlExpCtxtNbNodes: (ctxt: import("./types").xmlExpCtxtPtr | null) => number, xmlExpDump: (buf: import("./types").xmlBufferPtr | null, expr: import("./types").xmlExpNodePtr | null) => any, xmlExpExpDerive: (ctxt: import("./types").xmlExpCtxtPtr | null, expr: import("./types").xmlExpNodePtr | null, sub: import("./types").xmlExpNodePtr | null) => import("./types").xmlExpNodePtr | null, xmlExpFree: (ctxt: import("./types").xmlExpCtxtPtr | null, expr: import("./types").xmlExpNodePtr | null) => any, xmlExpFreeCtxt: (ctxt: import("./types").xmlExpCtxtPtr | null) => any, xmlExpGetLanguage: (ctxt: import("./types").xmlExpCtxtPtr | null, expr: import("./types").xmlExpNodePtr | null, langList: string | Buffer | null, len: number) => number, xmlExpGetStart: (ctxt: import("./types").xmlExpCtxtPtr | null, expr: import("./types").xmlExpNodePtr | null, tokList: string | Buffer | null, len: number) => number, xmlExpIsNillable: (expr: import("./types").xmlExpNodePtr | null) => number, xmlExpMaxToken: (expr: import("./types").xmlExpNodePtr | null) => number, xmlExpNewAtom: (ctxt: import("./types").xmlExpCtxtPtr | null, name: string | Buffer | null, len: number) => import("./types").xmlExpNodePtr | null, xmlExpNewCtxt: (maxNodes: number, dict: import("./types").xmlDictPtr | null) => import("./types").xmlExpCtxtPtr, xmlExpNewOr: (ctxt: import("./types").xmlExpCtxtPtr | null, left: import("./types").xmlExpNodePtr | null, right: import("./types").xmlExpNodePtr | null) => import("./types").xmlExpNodePtr | null, xmlExpNewRange: (ctxt: import("./types").xmlExpCtxtPtr | null, subset: import("./types").xmlExpNodePtr | null, min: number, max: number) => import("./types").xmlExpNodePtr | null, xmlExpNewSeq: (ctxt: import("./types").xmlExpCtxtPtr | null, left: import("./types").xmlExpNodePtr | null, right: import("./types").xmlExpNodePtr | null) => import("./types").xmlExpNodePtr | null, xmlExpParse: (ctxt: import("./types").xmlExpCtxtPtr | null, expr: string | Buffer | null) => import("./types").xmlExpNodePtr | null, xmlExpRef: (expr: import("./types").xmlExpNodePtr | null) => any, xmlExpStringDerive: (ctxt: import("./types").xmlExpCtxtPtr | null, expr: import("./types").xmlExpNodePtr | null, str: string | Buffer | null, len: number) => import("./types").xmlExpNodePtr | null, xmlExpSubsume: (ctxt: import("./types").xmlExpCtxtPtr | null, expr: import("./types").xmlExpNodePtr | null, sub: import("./types").xmlExpNodePtr | null) => number, xmlFileClose: (context: any) => number, xmlFileMatch: (filename: string | Buffer | null) => number, xmlFileOpen: (filename: string | Buffer | null) => any, xmlFileRead: (context: any, buffer: string | Buffer | null, len: number) => number, xmlFindCharEncodingHandler: (name: string | Buffer | null) => import("./types").xmlCharEncodingHandlerPtr, xmlFirstElementChild: (parent: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlFreeAttributeTable: (table: import("./types").xmlAttributeTablePtr | null) => any, xmlFreeAutomata: (am: import("./types").xmlAutomataPtr | null) => any, xmlFreeCatalog: (catal: import("./types").xmlCatalogPtr | null) => any, xmlFreeDoc: (cur: import("./types").xmlDocPtr | null) => any, xmlFreeDocElementContent: (doc: import("./types").xmlDocPtr | null, cur: import("./types").xmlElementContentPtr | null) => any, xmlFreeDtd: (cur: import("./types").xmlDtdPtr | null) => any, xmlFreeElementContent: (cur: import("./types").xmlElementContentPtr | null) => any, xmlFreeElementTable: (table: import("./types").xmlElementTablePtr | null) => any, xmlFreeEntitiesTable: (table: import("./types").xmlEntitiesTablePtr | null) => any, xmlFreeEnumeration: (cur: import("./types").xmlEnumerationPtr | null) => any, xmlFreeIDTable: (table: import("./types").xmlIDTablePtr | null) => any, xmlFreeInputStream: (input: import("./types").xmlParserInputPtr | null) => any, xmlFreeMutex: (tok: import("./types").xmlMutexPtr | null) => any, xmlFreeNode: (cur: import("./types").xmlNodePtr | null) => any, xmlFreeNodeList: (cur: import("./types").xmlNodePtr | null) => any, xmlFreeNotationTable: (table: import("./types").xmlNotationTablePtr | null) => any, xmlFreeNs: (cur: import("./types").xmlNsPtr | null) => any, xmlFreeNsList: (cur: import("./types").xmlNsPtr | null) => any, xmlFreeParserCtxt: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlFreeParserInputBuffer: (inArg: import("./types").xmlParserInputBufferPtr | null) => any, xmlFreePattern: (comp: import("./types").xmlPatternPtr | null) => any, xmlFreePatternList: (comp: import("./types").xmlPatternPtr | null) => any, xmlFreeProp: (cur: import("./types").xmlAttrPtr | null) => any, xmlFreePropList: (cur: import("./types").xmlAttrPtr | null) => any, xmlFreeRMutex: (tok: import("./types").xmlRMutexPtr | null) => any, xmlFreeRefTable: (table: import("./types").xmlRefTablePtr | null) => any, xmlFreeStreamCtxt: (stream: import("./types").xmlStreamCtxtPtr | null) => any, xmlFreeURI: (uri: import("./types").xmlURIPtr | null) => any, xmlFreeValidCtxt: (arg0: import("./types").xmlValidCtxtPtr | null) => any, xmlGcMemGet: (freeFunc: {}, mallocFunc: {}, mallocAtomicFunc: {}, reallocFunc: {}, strdupFunc: {}) => number, xmlGcMemSetup: (freeFunc: {}, mallocFunc: {}, mallocAtomicFunc: {}, reallocFunc: {}, strdupFunc: {}) => number, xmlGetBufferAllocationScheme: () => {}, xmlGetCharEncodingHandler: (enc: {}) => import("./types").xmlCharEncodingHandlerPtr, xmlGetCharEncodingName: (enc: {}) => string, xmlGetCompressMode: () => number, xmlGetDocCompressMode: (doc: import("./types").xmlDocPtr | null) => number, xmlGetDocEntity: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null) => import("./types").xmlEntityPtr, xmlGetDtdAttrDesc: (dtd: import("./types").xmlDtdPtr | null, elem: string | Buffer | null, name: string | Buffer | null) => import("./types").xmlAttributePtr, xmlGetDtdElementDesc: (dtd: import("./types").xmlDtdPtr | null, name: string | Buffer | null) => import("./types").xmlElementPtr | null, xmlGetDtdEntity: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null) => import("./types").xmlEntityPtr, xmlGetDtdNotationDesc: (dtd: import("./types").xmlDtdPtr | null, name: string | Buffer | null) => import("./types").xmlNotationPtr, xmlGetDtdQAttrDesc: (dtd: import("./types").xmlDtdPtr | null, elem: string | Buffer | null, name: string | Buffer | null, prefix: string | Buffer | null) => import("./types").xmlAttributePtr, xmlGetDtdQElementDesc: (dtd: import("./types").xmlDtdPtr | null, name: string | Buffer | null, prefix: string | Buffer | null) => import("./types").xmlElementPtr | null, xmlGetEncodingAlias: (alias: string | Buffer | null) => string, xmlGetExternalEntityLoader: () => {}, xmlGetFeature: (ctxt: import("./types").xmlParserCtxtPtr | null, name: string | Buffer | null, result: any) => number, xmlGetFeaturesList: (len: number, result: string | Buffer | null) => number, xmlGetGlobalState: () => import("./types").xmlGlobalStatePtr, xmlGetID: (doc: import("./types").xmlDocPtr | null, ID: string | Buffer | null) => import("./types").xmlAttrPtr | null, xmlGetIntSubset: (doc: import("./types").xmlDocPtr | null) => import("./types").xmlDtdPtr | null, xmlGetLastChild: (parent: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlGetLastError: () => import("./types").xmlErrorPtr, xmlGetLineNo: (node: import("./types").xmlNodePtr | null) => number, xmlGetNoNsProp: (node: import("./types").xmlNodePtr | null, name: string | Buffer | null) => string, xmlGetNodePath: (node: import("./types").xmlNodePtr | null) => string, xmlGetNsList: (doc: import("./types").xmlDocPtr | null, node: import("./types").xmlNodePtr | null) => import("./types").xmlNsPtr[], xmlGetNsProp: (node: import("./types").xmlNodePtr | null, name: string | Buffer | null, nameSpace: string | Buffer | null) => string, xmlGetParameterEntity: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null) => import("./types").xmlEntityPtr, xmlGetPredefinedEntity: (name: string | Buffer | null) => import("./types").xmlEntityPtr, xmlGetProp: (node: import("./types").xmlNodePtr | null, name: string | Buffer | null) => string, xmlGetRefs: (doc: import("./types").xmlDocPtr | null, ID: string | Buffer | null) => import("./types").xmlListPtr, xmlGetThreadId: () => number, xmlGetUTF8Char: (utf: string | Buffer | null, len: number) => number, xmlHandleEntity: (ctxt: import("./types").xmlParserCtxtPtr | null, entity: import("./types").xmlEntityPtr | null) => any, xmlHasFeature: (feature: {}) => number, xmlHasNsProp: (node: import("./types").xmlNodePtr | null, name: string | Buffer | null, nameSpace: string | Buffer | null) => import("./types").xmlAttrPtr | null, xmlHasProp: (node: import("./types").xmlNodePtr | null, name: string | Buffer | null) => import("./types").xmlAttrPtr | null, xmlHashAddEntry: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, userdata: any) => number, xmlHashAddEntry2: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, name2: string | Buffer | null, userdata: any) => number, xmlHashAddEntry3: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, name2: string | Buffer | null, name3: string | Buffer | null, userdata: any) => number, xmlHashCopy: (table: import("./types").xmlHashTablePtr | null, f: {}) => import("./types").xmlHashTablePtr, xmlHashCreate: (size: number) => import("./types").xmlHashTablePtr, xmlHashCreateDict: (size: number, dict: import("./types").xmlDictPtr | null) => import("./types").xmlHashTablePtr, xmlHashDefaultDeallocator: (entry: any, name: string | Buffer | null) => any, xmlHashFree: (table: import("./types").xmlHashTablePtr | null, f: {}) => any, xmlHashLookup: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null) => any, xmlHashLookup2: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, name2: string | Buffer | null) => any, xmlHashLookup3: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, name2: string | Buffer | null, name3: string | Buffer | null) => any, xmlHashQLookup: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, prefix: string | Buffer | null) => any, xmlHashQLookup2: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, prefix: string | Buffer | null, name2: string | Buffer | null, prefix2: string | Buffer | null) => any, xmlHashQLookup3: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, prefix: string | Buffer | null, name2: string | Buffer | null, prefix2: string | Buffer | null, name3: string | Buffer | null, prefix3: string | Buffer | null) => any, xmlHashRemoveEntry: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, f: {}) => number, xmlHashRemoveEntry2: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, name2: string | Buffer | null, f: {}) => number, xmlHashRemoveEntry3: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, name2: string | Buffer | null, name3: string | Buffer | null, f: {}) => number, xmlHashScan: (table: import("./types").xmlHashTablePtr | null, f: {}, data: any) => any, xmlHashScan3: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, name2: string | Buffer | null, name3: string | Buffer | null, f: {}, data: any) => any, xmlHashScanFull: (table: import("./types").xmlHashTablePtr | null, f: {}, data: any) => any, xmlHashScanFull3: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, name2: string | Buffer | null, name3: string | Buffer | null, f: {}, data: any) => any, xmlHashSize: (table: import("./types").xmlHashTablePtr | null) => number, xmlHashUpdateEntry: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, userdata: any, f: {}) => number, xmlHashUpdateEntry2: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, name2: string | Buffer | null, userdata: any, f: {}) => number, xmlHashUpdateEntry3: (table: import("./types").xmlHashTablePtr | null, name: string | Buffer | null, name2: string | Buffer | null, name3: string | Buffer | null, userdata: any, f: {}) => number, xmlIOParseDTD: (sax: import("./types").xmlSAXHandlerPtr | null, input: import("./types").xmlParserInputBufferPtr | null, enc: {}) => import("./types").xmlDtdPtr | null, xmlInitCharEncodingHandlers: () => any, xmlInitGlobals: () => any, xmlInitMemory: () => number, xmlInitNodeInfoSeq: (seq: import("./types").xmlParserNodeInfoSeqPtr | null) => any, xmlInitParser: () => any, xmlInitParserCtxt: (ctxt: import("./types").xmlParserCtxtPtr | null) => number, xmlInitThreads: () => any, xmlInitializeCatalog: () => any, xmlInitializeDict: () => number, xmlInitializeGlobalState: (gs: import("./types").xmlGlobalStatePtr | null) => any, xmlInitializePredefinedEntities: () => any, xmlIsBaseChar: (ch: number) => number, xmlIsBlank: (ch: number) => number, xmlIsBlankNode: (node: import("./types").xmlNodePtr | null) => number, xmlIsChar: (ch: number) => number, xmlIsCombining: (ch: number) => number, xmlIsDigit: (ch: number) => number, xmlIsExtender: (ch: number) => number, xmlIsID: (doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlNodePtr | null, attr: import("./types").xmlAttrPtr | null) => number, xmlIsIdeographic: (ch: number) => number, xmlIsLetter: (c: number) => number, xmlIsMainThread: () => number, xmlIsMixedElement: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null) => number, xmlIsPubidChar: (ch: number) => number, xmlIsRef: (doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlNodePtr | null, attr: import("./types").xmlAttrPtr | null) => number, xmlIsXHTML: (systemID: string | Buffer | null, publicID: string | Buffer | null) => number, xmlKeepBlanksDefault: (val: number) => number, xmlLastElementChild: (parent: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlLineNumbersDefault: (val: number) => number, xmlLinkGetData: (lk: import("./types").xmlLinkPtr | null) => any, xmlListAppend: (l: import("./types").xmlListPtr | null, data: any) => number, xmlListClear: (l: import("./types").xmlListPtr | null) => any, xmlListCopy: (cur: import("./types").xmlListPtr | null, old: import("./types").xmlListPtr | null) => number, xmlListCreate: (deallocator: {}, compare: {}) => import("./types").xmlListPtr, xmlListDelete: (l: import("./types").xmlListPtr | null) => any, xmlListDup: (old: import("./types").xmlListPtr | null) => import("./types").xmlListPtr, xmlListEmpty: (l: import("./types").xmlListPtr | null) => number, xmlListEnd: (l: import("./types").xmlListPtr | null) => import("./types").xmlLinkPtr, xmlListFront: (l: import("./types").xmlListPtr | null) => import("./types").xmlLinkPtr, xmlListInsert: (l: import("./types").xmlListPtr | null, data: any) => number, xmlListMerge: (l1: import("./types").xmlListPtr | null, l2: import("./types").xmlListPtr | null) => any, xmlListPopBack: (l: import("./types").xmlListPtr | null) => any, xmlListPopFront: (l: import("./types").xmlListPtr | null) => any, xmlListPushBack: (l: import("./types").xmlListPtr | null, data: any) => number, xmlListPushFront: (l: import("./types").xmlListPtr | null, data: any) => number, xmlListRemoveAll: (l: import("./types").xmlListPtr | null, data: any) => number, xmlListRemoveFirst: (l: import("./types").xmlListPtr | null, data: any) => number, xmlListRemoveLast: (l: import("./types").xmlListPtr | null, data: any) => number, xmlListReverse: (l: import("./types").xmlListPtr | null) => any, xmlListReverseSearch: (l: import("./types").xmlListPtr | null, data: any) => any, xmlListReverseWalk: (l: import("./types").xmlListPtr | null, walker: {}, user: any) => any, xmlListSearch: (l: import("./types").xmlListPtr | null, data: any) => any, xmlListSize: (l: import("./types").xmlListPtr | null) => number, xmlListSort: (l: import("./types").xmlListPtr | null) => any, xmlListWalk: (l: import("./types").xmlListPtr | null, walker: {}, user: any) => any, xmlLoadACatalog: (filename: string | Buffer | null) => import("./types").xmlCatalogPtr, xmlLoadCatalog: (filename: string | Buffer | null) => number, xmlLoadCatalogs: (paths: string | Buffer | null) => any, xmlLoadExternalEntity: (URL: string | Buffer | null, ID: string | Buffer | null, ctxt: import("./types").xmlParserCtxtPtr | null) => import("./types").xmlParserInputPtr, xmlLoadSGMLSuperCatalog: (filename: string | Buffer | null) => import("./types").xmlCatalogPtr, xmlLockLibrary: () => any, xmlMallocAtomicLoc: (size: number, file: string | Buffer | null, line: number) => any, xmlMallocLoc: (size: number, file: string | Buffer | null, line: number) => any, xmlMemBlocks: () => number, xmlMemDisplay: (fp: undefined) => any, xmlMemDisplayLast: (fp: undefined, nbBytes: number) => any, xmlMemFree: (ptr: any) => any, xmlMemGet: (freeFunc: {}, mallocFunc: {}, reallocFunc: {}, strdupFunc: {}) => number, xmlMemMalloc: (size: number) => any, xmlMemRealloc: (ptr: any, size: number) => any, xmlMemSetup: (freeFunc: {}, mallocFunc: {}, reallocFunc: {}, strdupFunc: {}) => number, xmlMemShow: (fp: undefined, nr: number) => any, xmlMemStrdupLoc: (str: string | Buffer | null, file: string | Buffer | null, line: number) => string, xmlMemUsed: () => number, xmlMemoryDump: () => any, xmlMemoryStrdup: (str: string | Buffer | null) => string, xmlModuleClose: (module: import("./types").xmlModulePtr | null) => number, xmlModuleFree: (module: import("./types").xmlModulePtr | null) => number, xmlModuleOpen: (filename: string | Buffer | null, options: number) => import("./types").xmlModulePtr, xmlModuleSymbol: (module: import("./types").xmlModulePtr | null, name: string | Buffer | null, result: any) => number, xmlMutexLock: (tok: import("./types").xmlMutexPtr | null) => any, xmlMutexUnlock: (tok: import("./types").xmlMutexPtr | null) => any, xmlNamespaceParseNCName: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlNamespaceParseNSDef: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlNamespaceParseQName: (ctxt: import("./types").xmlParserCtxtPtr | null, prefix: string | Buffer | null) => string, xmlNewAutomata: () => import("./types").xmlAutomataPtr, xmlNewCDataBlock: (doc: import("./types").xmlDocPtr | null, content: string | Buffer | null, len: number) => import("./types").xmlNodePtr | null, xmlNewCatalog: (sgml: number) => import("./types").xmlCatalogPtr, xmlNewCharEncodingHandler: (name: string | Buffer | null, input: {}, output: {}) => import("./types").xmlCharEncodingHandlerPtr, xmlNewCharRef: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewChild: (parent: import("./types").xmlNodePtr | null, ns: import("./types").xmlNsPtr | null, name: string | Buffer | null, content: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewComment: (content: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewDoc: (version: string | Buffer | null) => import("./types").xmlDocPtr | null, xmlNewDocComment: (doc: import("./types").xmlDocPtr | null, content: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewDocElementContent: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null, type: {}) => import("./types").xmlElementContentPtr, xmlNewDocFragment: (doc: import("./types").xmlDocPtr | null) => import("./types").xmlNodePtr | null, xmlNewDocNode: (doc: import("./types").xmlDocPtr | null, ns: import("./types").xmlNsPtr | null, name: string | Buffer | null, content: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewDocNodeEatName: (doc: import("./types").xmlDocPtr | null, ns: import("./types").xmlNsPtr | null, name: string | Buffer | null, content: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewDocPI: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null, content: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewDocProp: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null, value: string | Buffer | null) => import("./types").xmlAttrPtr | null, xmlNewDocRawNode: (doc: import("./types").xmlDocPtr | null, ns: import("./types").xmlNsPtr | null, name: string | Buffer | null, content: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewDocText: (doc: import("./types").xmlDocPtr | null, content: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewDocTextLen: (doc: import("./types").xmlDocPtr | null, content: string | Buffer | null, len: number) => import("./types").xmlNodePtr | null, xmlNewDtd: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null, ExternalID: string | Buffer | null, SystemID: string | Buffer | null) => import("./types").xmlDtdPtr | null, xmlNewElementContent: (name: string | Buffer | null, type: {}) => import("./types").xmlElementContentPtr, xmlNewEntity: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null, type: number, ExternalID: string | Buffer | null, SystemID: string | Buffer | null, content: string | Buffer | null) => import("./types").xmlEntityPtr, xmlNewEntityInputStream: (ctxt: import("./types").xmlParserCtxtPtr | null, entity: import("./types").xmlEntityPtr | null) => import("./types").xmlParserInputPtr, xmlNewGlobalNs: (doc: import("./types").xmlDocPtr | null, href: string | Buffer | null, prefix: string | Buffer | null) => import("./types").xmlNsPtr | null, xmlNewIOInputStream: (ctxt: import("./types").xmlParserCtxtPtr | null, input: import("./types").xmlParserInputBufferPtr | null, enc: {}) => import("./types").xmlParserInputPtr, xmlNewInputFromFile: (ctxt: import("./types").xmlParserCtxtPtr | null, filename: string | Buffer | null) => import("./types").xmlParserInputPtr, xmlNewInputStream: (ctxt: import("./types").xmlParserCtxtPtr | null) => import("./types").xmlParserInputPtr, xmlNewMutex: () => import("./types").xmlMutexPtr, xmlNewNode: (ns: import("./types").xmlNsPtr | null, name: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewNodeEatName: (ns: import("./types").xmlNsPtr | null, name: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewNs: (node: import("./types").xmlNodePtr | null, href: string | Buffer | null, prefix: string | Buffer | null) => import("./types").xmlNsPtr | null, xmlNewNsProp: (node: import("./types").xmlNodePtr | null, ns: import("./types").xmlNsPtr | null, name: string | Buffer | null, value: string | Buffer | null) => import("./types").xmlAttrPtr | null, xmlNewNsPropEatName: (node: import("./types").xmlNodePtr | null, ns: import("./types").xmlNsPtr | null, name: string | Buffer | null, value: string | Buffer | null) => import("./types").xmlAttrPtr | null, xmlNewPI: (name: string | Buffer | null, content: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewParserCtxt: () => import("./types").xmlParserCtxtPtr, xmlNewProp: (node: import("./types").xmlNodePtr | null, name: string | Buffer | null, value: string | Buffer | null) => import("./types").xmlAttrPtr | null, xmlNewRMutex: () => import("./types").xmlRMutexPtr, xmlNewReference: (doc: import("./types").xmlDocPtr | null, name: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewStringInputStream: (ctxt: import("./types").xmlParserCtxtPtr | null, buffer: string | Buffer | null) => import("./types").xmlParserInputPtr, xmlNewText: (content: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewTextChild: (parent: import("./types").xmlNodePtr | null, ns: import("./types").xmlNsPtr | null, name: string | Buffer | null, content: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlNewTextLen: (content: string | Buffer | null, len: number) => import("./types").xmlNodePtr | null, xmlNewValidCtxt: () => import("./types").xmlValidCtxtPtr, xmlNextChar: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlNextElementSibling: (node: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlNoNetExternalEntityLoader: (URL: string | Buffer | null, ID: string | Buffer | null, ctxt: import("./types").xmlParserCtxtPtr | null) => import("./types").xmlParserInputPtr, xmlNodeAddContent: (cur: import("./types").xmlNodePtr | null, content: string | Buffer | null) => any, xmlNodeAddContentLen: (cur: import("./types").xmlNodePtr | null, content: string | Buffer | null, len: number) => any, xmlNodeBufGetContent: (buffer: import("./types").xmlBufferPtr | null, cur: import("./types").xmlNodePtr | null) => number, xmlNodeDump: (buf: import("./types").xmlBufferPtr | null, doc: import("./types").xmlDocPtr | null, cur: import("./types").xmlNodePtr | null, level: number, format: number) => number, xmlNodeDumpOutput: (buf: import("./types").xmlOutputBufferPtr | null, doc: import("./types").xmlDocPtr | null, cur: import("./types").xmlNodePtr | null, level: number, format: number, encoding: string | Buffer | null) => any, xmlNodeGetBase: (doc: import("./types").xmlDocPtr | null, cur: import("./types").xmlNodePtr | null) => string, xmlNodeGetContent: (cur: import("./types").xmlNodePtr | null) => string, xmlNodeGetLang: (cur: import("./types").xmlNodePtr | null) => string, xmlNodeGetSpacePreserve: (cur: import("./types").xmlNodePtr | null) => number, xmlNodeIsText: (node: import("./types").xmlNodePtr | null) => number, xmlNodeListGetRawString: (doc: import("./types").xmlDocPtr | null, list: import("./types").xmlNodePtr | null, inLine: number) => string, xmlNodeListGetString: (doc: import("./types").xmlDocPtr | null, list: import("./types").xmlNodePtr | null, inLine: number) => string, xmlNodeSetBase: (cur: import("./types").xmlNodePtr | null, uri: string | Buffer | null) => any, xmlNodeSetContent: (cur: import("./types").xmlNodePtr | null, content: string | Buffer | null) => any, xmlNodeSetContentLen: (cur: import("./types").xmlNodePtr | null, content: string | Buffer | null, len: number) => any, xmlNodeSetLang: (cur: import("./types").xmlNodePtr | null, lang: string | Buffer | null) => any, xmlNodeSetName: (cur: import("./types").xmlNodePtr | null, name: string | Buffer | null) => any, xmlNodeSetSpacePreserve: (cur: import("./types").xmlNodePtr | null, val: number) => any, xmlNormalizeURIPath: (path: string | Buffer | null) => number, xmlNormalizeWindowsPath: (path: string | Buffer | null) => string, xmlOutputBufferClose: (out: import("./types").xmlOutputBufferPtr | null) => number, xmlOutputBufferCreateBuffer: (buffer: import("./types").xmlBufferPtr | null, encoder: import("./types").xmlCharEncodingHandlerPtr | null) => import("./types").xmlOutputBufferPtr, xmlOutputBufferCreateFd: (fd: number, encoder: import("./types").xmlCharEncodingHandlerPtr | null) => import("./types").xmlOutputBufferPtr, xmlOutputBufferCreateFile: (file: undefined, encoder: import("./types").xmlCharEncodingHandlerPtr | null) => import("./types").xmlOutputBufferPtr, xmlOutputBufferCreateFilename: (URI: string | Buffer | null, encoder: import("./types").xmlCharEncodingHandlerPtr | null, compression: number) => import("./types").xmlOutputBufferPtr, xmlOutputBufferCreateFilenameDefault: (func: {}) => {}, xmlOutputBufferCreateIO: (iowrite: {}, ioclose: {}, ioctx: any, encoder: import("./types").xmlCharEncodingHandlerPtr | null) => import("./types").xmlOutputBufferPtr, xmlOutputBufferFlush: (out: import("./types").xmlOutputBufferPtr | null) => number, xmlOutputBufferGetContent: (out: import("./types").xmlOutputBufferPtr | null) => string, xmlOutputBufferGetSize: (out: import("./types").xmlOutputBufferPtr | null) => number, xmlOutputBufferWrite: (out: import("./types").xmlOutputBufferPtr | null, len: number, buf: string | Buffer | null) => number, xmlOutputBufferWriteEscape: (out: import("./types").xmlOutputBufferPtr | null, str: string | Buffer | null, escaping: {}) => number, xmlOutputBufferWriteString: (out: import("./types").xmlOutputBufferPtr | null, str: string | Buffer | null) => number, xmlParseAttValue: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlParseAttribute: (ctxt: import("./types").xmlParserCtxtPtr | null, value: string | Buffer | null) => string, xmlParseAttributeListDecl: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseAttributeType: (ctxt: import("./types").xmlParserCtxtPtr | null, tree: import("./types").xmlEnumerationPtr | null) => number, xmlParseBalancedChunkMemory: (doc: import("./types").xmlDocPtr | null, sax: import("./types").xmlSAXHandlerPtr | null, user_data: any, depth: number, string: string | Buffer | null, lst: import("./types").xmlNodePtr | null) => number, xmlParseBalancedChunkMemoryRecover: (doc: import("./types").xmlDocPtr | null, sax: import("./types").xmlSAXHandlerPtr | null, user_data: any, depth: number, string: string | Buffer | null, lst: import("./types").xmlNodePtr | null, recover: number) => number, xmlParseCDSect: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseCatalogFile: (filename: string | Buffer | null) => import("./types").xmlDocPtr | null, xmlParseCharData: (ctxt: import("./types").xmlParserCtxtPtr | null, cdata: number) => any, xmlParseCharEncoding: (name: string | Buffer | null) => {}, xmlParseCharRef: (ctxt: import("./types").xmlParserCtxtPtr | null) => number, xmlParseChunk: (ctxt: import("./types").xmlParserCtxtPtr | null, chunk: string | Buffer | null, size: number, terminate: number) => number, xmlParseComment: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseContent: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseCtxtExternalEntity: (ctx: import("./types").xmlParserCtxtPtr | null, URL: string | Buffer | null, ID: string | Buffer | null, lst: import("./types").xmlNodePtr | null) => number, xmlParseDTD: (ExternalID: string | Buffer | null, SystemID: string | Buffer | null) => import("./types").xmlDtdPtr | null, xmlParseDefaultDecl: (ctxt: import("./types").xmlParserCtxtPtr | null, value: string | Buffer | null) => number, xmlParseDoc: (cur: string | Buffer | null) => import("./types").xmlDocPtr | null, xmlParseDocTypeDecl: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseDocument: (ctxt: import("./types").xmlParserCtxtPtr | null) => number, xmlParseElement: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseElementChildrenContentDecl: (ctxt: import("./types").xmlParserCtxtPtr | null, inputchk: number) => import("./types").xmlElementContentPtr, xmlParseElementContentDecl: (ctxt: import("./types").xmlParserCtxtPtr | null, name: string | Buffer | null, result: import("./types").xmlElementContentPtr | null) => number, xmlParseElementDecl: (ctxt: import("./types").xmlParserCtxtPtr | null) => number, xmlParseElementMixedContentDecl: (ctxt: import("./types").xmlParserCtxtPtr | null, inputchk: number) => import("./types").xmlElementContentPtr, xmlParseEncName: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlParseEncodingDecl: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlParseEndTag: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseEntity: (filename: string | Buffer | null) => import("./types").xmlDocPtr | null, xmlParseEntityDecl: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseEntityRef: (ctxt: import("./types").xmlParserCtxtPtr | null) => import("./types").xmlEntityPtr, xmlParseEntityValue: (ctxt: import("./types").xmlParserCtxtPtr | null, orig: string | Buffer | null) => string, xmlParseEnumeratedType: (ctxt: import("./types").xmlParserCtxtPtr | null, tree: import("./types").xmlEnumerationPtr | null) => number, xmlParseEnumerationType: (ctxt: import("./types").xmlParserCtxtPtr | null) => import("./types").xmlEnumerationPtr, xmlParseExtParsedEnt: (ctxt: import("./types").xmlParserCtxtPtr | null) => number, xmlParseExternalEntity: (doc: import("./types").xmlDocPtr | null, sax: import("./types").xmlSAXHandlerPtr | null, user_data: any, depth: number, URL: string | Buffer | null, ID: string | Buffer | null, lst: import("./types").xmlNodePtr | null) => number, xmlParseExternalID: (ctxt: import("./types").xmlParserCtxtPtr | null, publicID: string | Buffer | null, strict: number) => string, xmlParseExternalSubset: (ctxt: import("./types").xmlParserCtxtPtr | null, ExternalID: string | Buffer | null, SystemID: string | Buffer | null) => any, xmlParseFile: (filename: string | Buffer | null) => import("./types").xmlDocPtr | null, xmlParseInNodeContext: (node: import("./types").xmlNodePtr | null, data: string | Buffer | null, datalen: number, options: number, lst: import("./types").xmlNodePtr | null) => {}, xmlParseMarkupDecl: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseMemory: (buffer: string | Buffer | null, size: number) => import("./types").xmlDocPtr | null, xmlParseMisc: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseName: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlParseNamespace: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseNmtoken: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlParseNotationDecl: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseNotationType: (ctxt: import("./types").xmlParserCtxtPtr | null) => import("./types").xmlEnumerationPtr, xmlParsePEReference: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParsePI: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParsePITarget: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlParsePubidLiteral: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlParseQuotedString: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlParseReference: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseSDDecl: (ctxt: import("./types").xmlParserCtxtPtr | null) => number, xmlParseStartTag: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlParseSystemLiteral: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlParseTextDecl: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParseURI: (str: string | Buffer | null) => import("./types").xmlURIPtr, xmlParseURIRaw: (str: string | Buffer | null, raw: number) => import("./types").xmlURIPtr, xmlParseURIReference: (uri: import("./types").xmlURIPtr | null, str: string | Buffer | null) => number, xmlParseVersionInfo: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlParseVersionNum: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlParseXMLDecl: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParserAddNodeInfo: (ctxt: import("./types").xmlParserCtxtPtr | null, info: import("./types").xmlParserNodeInfoPtr | null) => any, xmlParserError: (ctx: any, msg: string | Buffer | null, arg2: undefined) => any, xmlParserFindNodeInfo: (ctxt: import("./types").xmlParserCtxtPtr | null, node: import("./types").xmlNodePtr | null) => {}, xmlParserFindNodeInfoIndex: (seq: import("./types").xmlParserNodeInfoSeqPtr | null, node: import("./types").xmlNodePtr | null) => number, xmlParserGetDirectory: (filename: string | Buffer | null) => string, xmlParserHandlePEReference: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParserHandleReference: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlParserInputBufferCreateFd: (fd: number, enc: {}) => import("./types").xmlParserInputBufferPtr, xmlParserInputBufferCreateFile: (file: undefined, enc: {}) => import("./types").xmlParserInputBufferPtr, xmlParserInputBufferCreateFilename: (URI: string | Buffer | null, enc: {}) => import("./types").xmlParserInputBufferPtr, xmlParserInputBufferCreateFilenameDefault: (func: {}) => {}, xmlParserInputBufferCreateIO: (ioread: {}, ioclose: {}, ioctx: any, enc: {}) => import("./types").xmlParserInputBufferPtr, xmlParserInputBufferCreateMem: (mem: string | Buffer | null, size: number, enc: {}) => import("./types").xmlParserInputBufferPtr, xmlParserInputBufferCreateStatic: (mem: string | Buffer | null, size: number, enc: {}) => import("./types").xmlParserInputBufferPtr, xmlParserInputBufferGrow: (inArg: import("./types").xmlParserInputBufferPtr | null, len: number) => number, xmlParserInputBufferPush: (inArg: import("./types").xmlParserInputBufferPtr | null, len: number, buf: string | Buffer | null) => number, xmlParserInputBufferRead: (inArg: import("./types").xmlParserInputBufferPtr | null, len: number) => number, xmlParserInputGrow: (inArg: import("./types").xmlParserInputPtr | null, len: number) => number, xmlParserInputRead: (inArg: import("./types").xmlParserInputPtr | null, len: number) => number, xmlParserInputShrink: (inArg: import("./types").xmlParserInputPtr | null) => any, xmlParserPrintFileContext: (input: import("./types").xmlParserInputPtr | null) => any, xmlParserPrintFileInfo: (input: import("./types").xmlParserInputPtr | null) => any, xmlParserValidityError: (ctx: any, msg: string | Buffer | null, arg2: undefined) => any, xmlParserValidityWarning: (ctx: any, msg: string | Buffer | null, arg2: undefined) => any, xmlParserWarning: (ctx: any, msg: string | Buffer | null, arg2: undefined) => any, xmlPathToURI: (path: string | Buffer | null) => string, xmlPatternFromRoot: (comp: import("./types").xmlPatternPtr | null) => number, xmlPatternGetStreamCtxt: (comp: import("./types").xmlPatternPtr | null) => import("./types").xmlStreamCtxtPtr, xmlPatternMatch: (comp: import("./types").xmlPatternPtr | null, node: import("./types").xmlNodePtr | null) => number, xmlPatternMaxDepth: (comp: import("./types").xmlPatternPtr | null) => number, xmlPatternMinDepth: (comp: import("./types").xmlPatternPtr | null) => number, xmlPatternStreamable: (comp: import("./types").xmlPatternPtr | null) => number, xmlPatterncompile: (pattern: string | Buffer | null, dict: {}, flags: number, namespaces: string | Buffer | null) => import("./types").xmlPatternPtr, xmlPedanticParserDefault: (val: number) => number, xmlPopInput: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlPopInputCallbacks: () => number, xmlPopOutputCallbacks: () => number, xmlPreviousElementSibling: (node: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlPrintURI: (stream: undefined, uri: import("./types").xmlURIPtr | null) => any, xmlPushInput: (ctxt: import("./types").xmlParserCtxtPtr | null, input: import("./types").xmlParserInputPtr | null) => number, xmlRMutexLock: (tok: import("./types").xmlRMutexPtr | null) => any, xmlRMutexUnlock: (tok: import("./types").xmlRMutexPtr | null) => any, xmlReadDoc: (cur: string | Buffer | null, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, xmlReadFd: (fd: number, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, xmlReadFile: (URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, xmlReadIO: (ioread: {}, ioclose: {}, ioctx: any, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, xmlReadMemory: (buffer: string | Buffer | null, size: number, URL: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlDocPtr | null, xmlReallocLoc: (ptr: any, size: number, file: string | Buffer | null, line: number) => any, xmlReconciliateNs: (doc: import("./types").xmlDocPtr | null, tree: import("./types").xmlNodePtr | null) => number, xmlRecoverDoc: (cur: string | Buffer | null) => import("./types").xmlDocPtr | null, xmlRecoverFile: (filename: string | Buffer | null) => import("./types").xmlDocPtr | null, xmlRecoverMemory: (buffer: string | Buffer | null, size: number) => import("./types").xmlDocPtr | null, xmlRegExecErrInfo: (exec: import("./types").xmlRegExecCtxtPtr | null, string: string | Buffer | null, nbval: number, nbneg: number, values: string | Buffer | null, terminal: number) => number, xmlRegExecNextValues: (exec: import("./types").xmlRegExecCtxtPtr | null, nbval: number, nbneg: number, values: string | Buffer | null, terminal: number) => number, xmlRegExecPushString: (exec: import("./types").xmlRegExecCtxtPtr | null, value: string | Buffer | null, data: any) => number, xmlRegExecPushString2: (exec: import("./types").xmlRegExecCtxtPtr | null, value: string | Buffer | null, value2: string | Buffer | null, data: any) => number, xmlRegFreeExecCtxt: (exec: import("./types").xmlRegExecCtxtPtr | null) => any, xmlRegFreeRegexp: (regexp: import("./types").xmlRegexpPtr | null) => any, xmlRegNewExecCtxt: (comp: import("./types").xmlRegexpPtr | null, callback: {}, data: any) => import("./types").xmlRegExecCtxtPtr, xmlRegexpCompile: (regexp: string | Buffer | null) => import("./types").xmlRegexpPtr, xmlRegexpExec: (comp: import("./types").xmlRegexpPtr | null, value: string | Buffer | null) => number, xmlRegexpIsDeterminist: (comp: import("./types").xmlRegexpPtr | null) => number, xmlRegexpPrint: (output: undefined, regexp: import("./types").xmlRegexpPtr | null) => any, xmlRegisterCharEncodingHandler: (handler: import("./types").xmlCharEncodingHandlerPtr | null) => any, xmlRegisterDefaultInputCallbacks: () => any, xmlRegisterDefaultOutputCallbacks: () => any, xmlRegisterInputCallbacks: (matchFunc: {}, openFunc: {}, readFunc: {}, closeFunc: {}) => number, xmlRegisterNodeDefault: (func: {}) => {}, xmlRegisterOutputCallbacks: (matchFunc: {}, openFunc: {}, writeFunc: {}, closeFunc: {}) => number, xmlRelaxNGCleanupTypes: () => any, xmlRelaxNGDump: (output: undefined, schema: import("./types").xmlRelaxNGPtr | null) => any, xmlRelaxNGDumpTree: (output: undefined, schema: import("./types").xmlRelaxNGPtr | null) => any, xmlRelaxNGFree: (schema: import("./types").xmlRelaxNGPtr | null) => any, xmlRelaxNGFreeParserCtxt: (ctxt: import("./types").xmlRelaxNGParserCtxtPtr | null) => any, xmlRelaxNGFreeValidCtxt: (ctxt: import("./types").xmlRelaxNGValidCtxtPtr | null) => any, xmlRelaxNGGetParserErrors: (ctxt: import("./types").xmlRelaxNGParserCtxtPtr | null, err: {}, warn: {}, ctx: any) => number, xmlRelaxNGGetValidErrors: (ctxt: import("./types").xmlRelaxNGValidCtxtPtr | null, err: {}, warn: {}, ctx: any) => number, xmlRelaxNGInitTypes: () => number, xmlRelaxNGNewDocParserCtxt: (doc: import("./types").xmlDocPtr | null) => import("./types").xmlRelaxNGParserCtxtPtr, xmlRelaxNGNewMemParserCtxt: (buffer: string | Buffer | null, size: number) => import("./types").xmlRelaxNGParserCtxtPtr, xmlRelaxNGNewParserCtxt: (URL: string | Buffer | null) => import("./types").xmlRelaxNGParserCtxtPtr, xmlRelaxNGNewValidCtxt: (schema: import("./types").xmlRelaxNGPtr | null) => import("./types").xmlRelaxNGValidCtxtPtr, xmlRelaxNGParse: (ctxt: import("./types").xmlRelaxNGParserCtxtPtr | null) => import("./types").xmlRelaxNGPtr, xmlRelaxNGSetParserErrors: (ctxt: import("./types").xmlRelaxNGParserCtxtPtr | null, err: {}, warn: {}, ctx: any) => any, xmlRelaxNGSetParserStructuredErrors: (ctxt: import("./types").xmlRelaxNGParserCtxtPtr | null, serror: {}, ctx: any) => any, xmlRelaxNGSetValidErrors: (ctxt: import("./types").xmlRelaxNGValidCtxtPtr | null, err: {}, warn: {}, ctx: any) => any, xmlRelaxNGSetValidStructuredErrors: (ctxt: import("./types").xmlRelaxNGValidCtxtPtr | null, serror: {}, ctx: any) => any, xmlRelaxNGValidateDoc: (ctxt: import("./types").xmlRelaxNGValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null) => number, xmlRelaxNGValidateFullElement: (ctxt: import("./types").xmlRelaxNGValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlNodePtr | null) => number, xmlRelaxNGValidatePopElement: (ctxt: import("./types").xmlRelaxNGValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlNodePtr | null) => number, xmlRelaxNGValidatePushCData: (ctxt: import("./types").xmlRelaxNGValidCtxtPtr | null, data: string | Buffer | null, len: number) => number, xmlRelaxNGValidatePushElement: (ctxt: import("./types").xmlRelaxNGValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlNodePtr | null) => number, xmlRelaxParserSetFlag: (ctxt: import("./types").xmlRelaxNGParserCtxtPtr | null, flag: number) => number, xmlRemoveID: (doc: import("./types").xmlDocPtr | null, attr: import("./types").xmlAttrPtr | null) => number, xmlRemoveProp: (cur: import("./types").xmlAttrPtr | null) => number, xmlRemoveRef: (doc: import("./types").xmlDocPtr | null, attr: import("./types").xmlAttrPtr | null) => number, xmlReplaceNode: (old: import("./types").xmlNodePtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlResetError: (err: import("./types").xmlErrorPtr | null) => any, xmlResetLastError: () => any, xmlSAX2AttributeDecl: (ctx: any, elem: string | Buffer | null, fullname: string | Buffer | null, type: number, def: number, defaultValue: string | Buffer | null, tree: import("./types").xmlEnumerationPtr | null) => any, xmlSAX2CDataBlock: (ctx: any, value: string | Buffer | null, len: number) => any, xmlSAX2Characters: (ctx: any, ch: string | Buffer | null, len: number) => any, xmlSAX2Comment: (ctx: any, value: string | Buffer | null) => any, xmlSAX2ElementDecl: (ctx: any, name: string | Buffer | null, type: number, content: import("./types").xmlElementContentPtr | null) => any, xmlSAX2EndDocument: (ctx: any) => any, xmlSAX2EndElement: (ctx: any, name: string | Buffer | null) => any, xmlSAX2EndElementNs: (ctx: any, localname: string | Buffer | null, prefix: string | Buffer | null, URI: string | Buffer | null) => any, xmlSAX2EntityDecl: (ctx: any, name: string | Buffer | null, type: number, publicId: string | Buffer | null, systemId: string | Buffer | null, content: string | Buffer | null) => any, xmlSAX2ExternalSubset: (ctx: any, name: string | Buffer | null, ExternalID: string | Buffer | null, SystemID: string | Buffer | null) => any, xmlSAX2GetColumnNumber: (ctx: any) => number, xmlSAX2GetEntity: (ctx: any, name: string | Buffer | null) => import("./types").xmlEntityPtr, xmlSAX2GetLineNumber: (ctx: any) => number, xmlSAX2GetParameterEntity: (ctx: any, name: string | Buffer | null) => import("./types").xmlEntityPtr, xmlSAX2GetPublicId: (ctx: any) => string, xmlSAX2GetSystemId: (ctx: any) => string, xmlSAX2HasExternalSubset: (ctx: any) => number, xmlSAX2HasInternalSubset: (ctx: any) => number, xmlSAX2IgnorableWhitespace: (ctx: any, ch: string | Buffer | null, len: number) => any, xmlSAX2InitDefaultSAXHandler: (hdlr: {}, warning: number) => any, xmlSAX2InitDocbDefaultSAXHandler: (hdlr: {}) => any, xmlSAX2InitHtmlDefaultSAXHandler: (hdlr: {}) => any, xmlSAX2InternalSubset: (ctx: any, name: string | Buffer | null, ExternalID: string | Buffer | null, SystemID: string | Buffer | null) => any, xmlSAX2IsStandalone: (ctx: any) => number, xmlSAX2NotationDecl: (ctx: any, name: string | Buffer | null, publicId: string | Buffer | null, systemId: string | Buffer | null) => any, xmlSAX2ProcessingInstruction: (ctx: any, target: string | Buffer | null, data: string | Buffer | null) => any, xmlSAX2Reference: (ctx: any, name: string | Buffer | null) => any, xmlSAX2ResolveEntity: (ctx: any, publicId: string | Buffer | null, systemId: string | Buffer | null) => import("./types").xmlParserInputPtr, xmlSAX2SetDocumentLocator: (ctx: any, loc: import("./types").xmlSAXLocatorPtr | null) => any, xmlSAX2StartDocument: (ctx: any) => any, xmlSAX2StartElement: (ctx: any, fullname: string | Buffer | null, atts: string | Buffer | null) => any, xmlSAX2StartElementNs: (ctx: any, localname: string | Buffer | null, prefix: string | Buffer | null, URI: string | Buffer | null, nb_namespaces: number, namespaces: string | Buffer | null, nb_attributes: number, nb_defaulted: number, attributes: string | Buffer | null) => any, xmlSAX2UnparsedEntityDecl: (ctx: any, name: string | Buffer | null, publicId: string | Buffer | null, systemId: string | Buffer | null, notationName: string | Buffer | null) => any, xmlSAXDefaultVersion: (version: number) => number, xmlSAXParseDTD: (sax: import("./types").xmlSAXHandlerPtr | null, ExternalID: string | Buffer | null, SystemID: string | Buffer | null) => import("./types").xmlDtdPtr | null, xmlSAXParseDoc: (sax: import("./types").xmlSAXHandlerPtr | null, cur: string | Buffer | null, recovery: number) => import("./types").xmlDocPtr | null, xmlSAXParseEntity: (sax: import("./types").xmlSAXHandlerPtr | null, filename: string | Buffer | null) => import("./types").xmlDocPtr | null, xmlSAXParseFile: (sax: import("./types").xmlSAXHandlerPtr | null, filename: string | Buffer | null, recovery: number) => import("./types").xmlDocPtr | null, xmlSAXParseFileWithData: (sax: import("./types").xmlSAXHandlerPtr | null, filename: string | Buffer | null, recovery: number, data: any) => import("./types").xmlDocPtr | null, xmlSAXParseMemory: (sax: import("./types").xmlSAXHandlerPtr | null, buffer: string | Buffer | null, size: number, recovery: number) => import("./types").xmlDocPtr | null, xmlSAXParseMemoryWithData: (sax: import("./types").xmlSAXHandlerPtr | null, buffer: string | Buffer | null, size: number, recovery: number, data: any) => import("./types").xmlDocPtr | null, xmlSAXUserParseFile: (sax: import("./types").xmlSAXHandlerPtr | null, user_data: any, filename: string | Buffer | null) => number, xmlSAXUserParseMemory: (sax: import("./types").xmlSAXHandlerPtr | null, user_data: any, buffer: string | Buffer | null, size: number) => number, xmlSAXVersion: (hdlr: {}, version: number) => number, xmlSaveClose: (ctxt: import("./types").xmlSaveCtxtPtr | null) => number, xmlSaveDoc: (ctxt: import("./types").xmlSaveCtxtPtr | null, doc: import("./types").xmlDocPtr | null) => number, xmlSaveFile: (filename: string | Buffer | null, cur: import("./types").xmlDocPtr | null) => number, xmlSaveFileEnc: (filename: string | Buffer | null, cur: import("./types").xmlDocPtr | null, encoding: string | Buffer | null) => number, xmlSaveFileTo: (buf: import("./types").xmlOutputBufferPtr | null, cur: import("./types").xmlDocPtr | null, encoding: string | Buffer | null) => number, xmlSaveFlush: (ctxt: import("./types").xmlSaveCtxtPtr | null) => number, xmlSaveFormatFile: (filename: string | Buffer | null, cur: import("./types").xmlDocPtr | null, format: number) => number, xmlSaveFormatFileEnc: (filename: string | Buffer | null, cur: import("./types").xmlDocPtr | null, encoding: string | Buffer | null, format: number) => number, xmlSaveFormatFileTo: (buf: import("./types").xmlOutputBufferPtr | null, cur: import("./types").xmlDocPtr | null, encoding: string | Buffer | null, format: number) => number, xmlSaveSetAttrEscape: (ctxt: import("./types").xmlSaveCtxtPtr | null, escape: {}) => number, xmlSaveSetEscape: (ctxt: import("./types").xmlSaveCtxtPtr | null, escape: {}) => number, xmlSaveToBuffer: (buffer: import("./types").xmlBufferPtr | null, encoding: string | Buffer | null, options: number) => import("./types").xmlSaveCtxtPtr, xmlSaveToFd: (fd: number, encoding: string | Buffer | null, options: number) => import("./types").xmlSaveCtxtPtr, xmlSaveToFilename: (filename: string | Buffer | null, encoding: string | Buffer | null, options: number) => import("./types").xmlSaveCtxtPtr, xmlSaveToIO: (iowrite: {}, ioclose: {}, ioctx: any, encoding: string | Buffer | null, options: number) => import("./types").xmlSaveCtxtPtr, xmlSaveTree: (ctxt: import("./types").xmlSaveCtxtPtr | null, node: import("./types").xmlNodePtr | null) => number, xmlSaveUri: (uri: import("./types").xmlURIPtr | null) => string, xmlScanName: (ctxt: import("./types").xmlParserCtxtPtr | null) => string, xmlSchemaCheckFacet: (facet: import("./types").xmlSchemaFacetPtr | null, typeDecl: import("./types").xmlSchemaTypePtr | null, ctxt: import("./types").xmlSchemaParserCtxtPtr | null, name: string | Buffer | null) => number, xmlSchemaCleanupTypes: () => any, xmlSchemaCollapseString: (value: string | Buffer | null) => string, xmlSchemaCompareValues: (x: import("./types").xmlSchemaValPtr | null, y: import("./types").xmlSchemaValPtr | null) => number, xmlSchemaCompareValuesWhtsp: (x: import("./types").xmlSchemaValPtr | null, xws: {}, y: import("./types").xmlSchemaValPtr | null, yws: {}) => number, xmlSchemaCopyValue: (val: import("./types").xmlSchemaValPtr | null) => import("./types").xmlSchemaValPtr, xmlSchemaDump: (output: undefined, schema: import("./types").xmlSchemaPtr | null) => any, xmlSchemaFree: (schema: import("./types").xmlSchemaPtr | null) => any, xmlSchemaFreeFacet: (facet: import("./types").xmlSchemaFacetPtr | null) => any, xmlSchemaFreeParserCtxt: (ctxt: import("./types").xmlSchemaParserCtxtPtr | null) => any, xmlSchemaFreeType: (type: import("./types").xmlSchemaTypePtr | null) => any, xmlSchemaFreeValidCtxt: (ctxt: import("./types").xmlSchemaValidCtxtPtr | null) => any, xmlSchemaFreeValue: (val: import("./types").xmlSchemaValPtr | null) => any, xmlSchemaFreeWildcard: (wildcard: import("./types").xmlSchemaWildcardPtr | null) => any, xmlSchemaGetBuiltInListSimpleTypeItemType: (type: import("./types").xmlSchemaTypePtr | null) => import("./types").xmlSchemaTypePtr, xmlSchemaGetBuiltInType: (type: {}) => import("./types").xmlSchemaTypePtr, xmlSchemaGetCanonValue: (val: import("./types").xmlSchemaValPtr | null, retValue: string | Buffer | null) => number, xmlSchemaGetCanonValueWhtsp: (val: import("./types").xmlSchemaValPtr | null, retValue: string | Buffer | null, ws: {}) => number, xmlSchemaGetFacetValueAsULong: (facet: import("./types").xmlSchemaFacetPtr | null) => number, xmlSchemaGetParserErrors: (ctxt: import("./types").xmlSchemaParserCtxtPtr | null, err: {}, warn: {}, ctx: any) => number, xmlSchemaGetPredefinedType: (name: string | Buffer | null, ns: string | Buffer | null) => import("./types").xmlSchemaTypePtr, xmlSchemaGetValType: (val: import("./types").xmlSchemaValPtr | null) => {}, xmlSchemaGetValidErrors: (ctxt: import("./types").xmlSchemaValidCtxtPtr | null, err: {}, warn: {}, ctx: any) => number, xmlSchemaInitTypes: () => any, xmlSchemaIsBuiltInTypeFacet: (type: import("./types").xmlSchemaTypePtr | null, facetType: number) => number, xmlSchemaIsValid: (ctxt: import("./types").xmlSchemaValidCtxtPtr | null) => number, xmlSchemaNewDocParserCtxt: (doc: import("./types").xmlDocPtr | null) => import("./types").xmlSchemaParserCtxtPtr, xmlSchemaNewFacet: () => import("./types").xmlSchemaFacetPtr, xmlSchemaNewMemParserCtxt: (buffer: string | Buffer | null, size: number) => import("./types").xmlSchemaParserCtxtPtr, xmlSchemaNewNOTATIONValue: (name: string | Buffer | null, ns: string | Buffer | null) => import("./types").xmlSchemaValPtr, xmlSchemaNewParserCtxt: (URL: string | Buffer | null) => import("./types").xmlSchemaParserCtxtPtr, xmlSchemaNewQNameValue: (namespaceName: string | Buffer | null, localName: string | Buffer | null) => import("./types").xmlSchemaValPtr, xmlSchemaNewStringValue: (type: {}, value: string | Buffer | null) => import("./types").xmlSchemaValPtr, xmlSchemaNewValidCtxt: (schema: import("./types").xmlSchemaPtr | null) => import("./types").xmlSchemaValidCtxtPtr, xmlSchemaParse: (ctxt: import("./types").xmlSchemaParserCtxtPtr | null) => import("./types").xmlSchemaPtr, xmlSchemaSAXPlug: (ctxt: import("./types").xmlSchemaValidCtxtPtr | null, sax: import("./types").xmlSAXHandlerPtr | null, user_data: any) => import("./types").xmlSchemaSAXPlugPtr, xmlSchemaSAXUnplug: (plug: import("./types").xmlSchemaSAXPlugPtr | null) => number, xmlSchemaSetParserErrors: (ctxt: import("./types").xmlSchemaParserCtxtPtr | null, err: {}, warn: {}, ctx: any) => any, xmlSchemaSetParserStructuredErrors: (ctxt: import("./types").xmlSchemaParserCtxtPtr | null, serror: {}, ctx: any) => any, xmlSchemaSetValidErrors: (ctxt: import("./types").xmlSchemaValidCtxtPtr | null, err: {}, warn: {}, ctx: any) => any, xmlSchemaSetValidOptions: (ctxt: import("./types").xmlSchemaValidCtxtPtr | null, options: number) => number, xmlSchemaSetValidStructuredErrors: (ctxt: import("./types").xmlSchemaValidCtxtPtr | null, serror: {}, ctx: any) => any, xmlSchemaValPredefTypeNode: (type: import("./types").xmlSchemaTypePtr | null, value: string | Buffer | null, val: import("./types").xmlSchemaValPtr | null, node: import("./types").xmlNodePtr | null) => number, xmlSchemaValPredefTypeNodeNoNorm: (type: import("./types").xmlSchemaTypePtr | null, value: string | Buffer | null, val: import("./types").xmlSchemaValPtr | null, node: import("./types").xmlNodePtr | null) => number, xmlSchemaValidCtxtGetOptions: (ctxt: import("./types").xmlSchemaValidCtxtPtr | null) => number, xmlSchemaValidCtxtGetParserCtxt: (ctxt: import("./types").xmlSchemaValidCtxtPtr | null) => import("./types").xmlParserCtxtPtr, xmlSchemaValidateDoc: (ctxt: import("./types").xmlSchemaValidCtxtPtr | null, instance: import("./types").xmlDocPtr | null) => number, xmlSchemaValidateFacet: (base: import("./types").xmlSchemaTypePtr | null, facet: import("./types").xmlSchemaFacetPtr | null, value: string | Buffer | null, val: import("./types").xmlSchemaValPtr | null) => number, xmlSchemaValidateFacetWhtsp: (facet: import("./types").xmlSchemaFacetPtr | null, fws: {}, valType: {}, value: string | Buffer | null, val: import("./types").xmlSchemaValPtr | null, ws: {}) => number, xmlSchemaValidateFile: (ctxt: import("./types").xmlSchemaValidCtxtPtr | null, filename: string | Buffer | null, options: number) => number, xmlSchemaValidateLengthFacet: (type: import("./types").xmlSchemaTypePtr | null, facet: import("./types").xmlSchemaFacetPtr | null, value: string | Buffer | null, val: import("./types").xmlSchemaValPtr | null, length: number) => number, xmlSchemaValidateLengthFacetWhtsp: (facet: import("./types").xmlSchemaFacetPtr | null, valType: {}, value: string | Buffer | null, val: import("./types").xmlSchemaValPtr | null, length: number, ws: {}) => number, xmlSchemaValidateListSimpleTypeFacet: (facet: import("./types").xmlSchemaFacetPtr | null, value: string | Buffer | null, actualLen: number, expectedLen: number) => number, xmlSchemaValidateOneElement: (ctxt: import("./types").xmlSchemaValidCtxtPtr | null, elem: import("./types").xmlNodePtr | null) => number, xmlSchemaValidatePredefinedType: (type: import("./types").xmlSchemaTypePtr | null, value: string | Buffer | null, val: import("./types").xmlSchemaValPtr | null) => number, xmlSchemaValidateSetFilename: (vctxt: import("./types").xmlSchemaValidCtxtPtr | null, filename: string | Buffer | null) => any, xmlSchemaValidateSetLocator: (vctxt: import("./types").xmlSchemaValidCtxtPtr | null, f: {}, ctxt: any) => any, xmlSchemaValidateStream: (ctxt: import("./types").xmlSchemaValidCtxtPtr | null, input: import("./types").xmlParserInputBufferPtr | null, enc: {}, sax: import("./types").xmlSAXHandlerPtr | null, user_data: any) => number, xmlSchemaValueAppend: (prev: import("./types").xmlSchemaValPtr | null, cur: import("./types").xmlSchemaValPtr | null) => number, xmlSchemaValueGetAsBoolean: (val: import("./types").xmlSchemaValPtr | null) => number, xmlSchemaValueGetAsString: (val: import("./types").xmlSchemaValPtr | null) => string, xmlSchemaValueGetNext: (cur: import("./types").xmlSchemaValPtr | null) => import("./types").xmlSchemaValPtr, xmlSchemaWhiteSpaceReplace: (value: string | Buffer | null) => string, xmlSearchNs: (doc: import("./types").xmlDocPtr | null, node: import("./types").xmlNodePtr | null, nameSpace: string | Buffer | null) => import("./types").xmlNsPtr | null, xmlSearchNsByHref: (doc: import("./types").xmlDocPtr | null, node: import("./types").xmlNodePtr | null, href: string | Buffer | null) => import("./types").xmlNsPtr | null, xmlSetBufferAllocationScheme: (scheme: {}) => any, xmlSetCompressMode: (mode: number) => any, xmlSetDocCompressMode: (doc: import("./types").xmlDocPtr | null, mode: number) => any, xmlSetEntityReferenceFunc: (func: {}) => any, xmlSetExternalEntityLoader: (f: {}) => any, xmlSetFeature: (ctxt: import("./types").xmlParserCtxtPtr | null, name: string | Buffer | null, value: any) => number, xmlSetGenericErrorFunc: (ctx: any, handler: {}) => any, xmlSetListDoc: (list: import("./types").xmlNodePtr | null, doc: import("./types").xmlDocPtr | null) => any, xmlSetNs: (node: import("./types").xmlNodePtr | null, ns: import("./types").xmlNsPtr | null) => any, xmlSetNsProp: (node: import("./types").xmlNodePtr | null, ns: import("./types").xmlNsPtr | null, name: string | Buffer | null, value: string | Buffer | null) => import("./types").xmlAttrPtr | null, xmlSetProp: (node: import("./types").xmlNodePtr | null, name: string | Buffer | null, value: string | Buffer | null) => import("./types").xmlAttrPtr | null, xmlSetStructuredErrorFunc: (ctx: any, handler: {}) => any, xmlSetTreeDoc: (tree: import("./types").xmlNodePtr | null, doc: import("./types").xmlDocPtr | null) => any, xmlSetupParserForBuffer: (ctxt: import("./types").xmlParserCtxtPtr | null, buffer: string | Buffer | null, filename: string | Buffer | null) => any, xmlSkipBlankChars: (ctxt: import("./types").xmlParserCtxtPtr | null) => number, xmlSnprintfElementContent: (buf: string | Buffer | null, size: number, content: import("./types").xmlElementContentPtr | null, englob: number) => any, xmlSplitQName: (ctxt: import("./types").xmlParserCtxtPtr | null, name: string | Buffer | null, prefix: string | Buffer | null) => string, xmlSplitQName2: (name: string | Buffer | null, prefix: string | Buffer | null) => string, xmlSplitQName3: (name: string | Buffer | null, len: number) => string, xmlSprintfElementContent: (buf: string | Buffer | null, content: import("./types").xmlElementContentPtr | null, englob: number) => any, xmlStopParser: (ctxt: import("./types").xmlParserCtxtPtr | null) => any, xmlStrEqual: (str1: string | Buffer | null, str2: string | Buffer | null) => number, xmlStrPrintf: (buf: string | Buffer | null, len: number, msg: string | Buffer | null, arg3: undefined) => number, xmlStrQEqual: (pref: string | Buffer | null, name: string | Buffer | null, str: string | Buffer | null) => number, xmlStrcasecmp: (str1: string | Buffer | null, str2: string | Buffer | null) => number, xmlStrcasestr: (str: string | Buffer | null, val: string | Buffer | null) => string, xmlStrcat: (cur: string | Buffer | null, add: string | Buffer | null) => string, xmlStrchr: (str: string | Buffer | null, val: string | Buffer | null) => string, xmlStrcmp: (str1: string | Buffer | null, str2: string | Buffer | null) => number, xmlStrdup: (cur: string | Buffer | null) => string, xmlStreamPop: (stream: import("./types").xmlStreamCtxtPtr | null) => number, xmlStreamPush: (stream: import("./types").xmlStreamCtxtPtr | null, name: string | Buffer | null, ns: string | Buffer | null) => number, xmlStreamPushAttr: (stream: import("./types").xmlStreamCtxtPtr | null, name: string | Buffer | null, ns: string | Buffer | null) => number, xmlStreamPushNode: (stream: import("./types").xmlStreamCtxtPtr | null, name: string | Buffer | null, ns: string | Buffer | null, nodeType: number) => number, xmlStreamWantsAnyNode: (stream: import("./types").xmlStreamCtxtPtr | null) => number, xmlStringCurrentChar: (ctxt: import("./types").xmlParserCtxtPtr | null, cur: string | Buffer | null, len: number) => number, xmlStringDecodeEntities: (ctxt: import("./types").xmlParserCtxtPtr | null, str: string | Buffer | null, what: number, end: string | Buffer | null, end2: string | Buffer | null, end3: string | Buffer | null) => string, xmlStringGetNodeList: (doc: import("./types").xmlDocPtr | null, value: string | Buffer | null) => import("./types").xmlNodePtr | null, xmlStringLenDecodeEntities: (ctxt: import("./types").xmlParserCtxtPtr | null, str: string | Buffer | null, len: number, what: number, end: string | Buffer | null, end2: string | Buffer | null, end3: string | Buffer | null) => string, xmlStringLenGetNodeList: (doc: import("./types").xmlDocPtr | null, value: string | Buffer | null, len: number) => import("./types").xmlNodePtr | null, xmlStrlen: (str: string | Buffer | null) => number, xmlStrncasecmp: (str1: string | Buffer | null, str2: string | Buffer | null, len: number) => number, xmlStrncat: (cur: string | Buffer | null, add: string | Buffer | null, len: number) => string, xmlStrncatNew: (str1: string | Buffer | null, str2: string | Buffer | null, len: number) => string, xmlStrncmp: (str1: string | Buffer | null, str2: string | Buffer | null, len: number) => number, xmlStrndup: (cur: string | Buffer | null, len: number) => string, xmlStrstr: (str: string | Buffer | null, val: string | Buffer | null) => string, xmlStrsub: (str: string | Buffer | null, start: number, len: number) => string, xmlSubstituteEntitiesDefault: (val: number) => number, xmlSwitchEncoding: (ctxt: import("./types").xmlParserCtxtPtr | null, enc: {}) => number, xmlSwitchInputEncoding: (ctxt: import("./types").xmlParserCtxtPtr | null, input: import("./types").xmlParserInputPtr | null, handler: import("./types").xmlCharEncodingHandlerPtr | null) => number, xmlSwitchToEncoding: (ctxt: import("./types").xmlParserCtxtPtr | null, handler: import("./types").xmlCharEncodingHandlerPtr | null) => number, xmlTextConcat: (node: import("./types").xmlNodePtr | null, content: string | Buffer | null, len: number) => number, xmlTextMerge: (first: import("./types").xmlNodePtr | null, second: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlThrDefBufferAllocScheme: (v: {}) => {}, xmlThrDefDefaultBufferSize: (v: number) => number, xmlThrDefDeregisterNodeDefault: (func: {}) => {}, xmlThrDefDoValidityCheckingDefaultValue: (v: number) => number, xmlThrDefGetWarningsDefaultValue: (v: number) => number, xmlThrDefIndentTreeOutput: (v: number) => number, xmlThrDefKeepBlanksDefaultValue: (v: number) => number, xmlThrDefLineNumbersDefaultValue: (v: number) => number, xmlThrDefLoadExtDtdDefaultValue: (v: number) => number, xmlThrDefOutputBufferCreateFilenameDefault: (func: {}) => {}, xmlThrDefParserDebugEntities: (v: number) => number, xmlThrDefParserInputBufferCreateFilenameDefault: (func: {}) => {}, xmlThrDefPedanticParserDefaultValue: (v: number) => number, xmlThrDefRegisterNodeDefault: (func: {}) => {}, xmlThrDefSaveNoEmptyTags: (v: number) => number, xmlThrDefSetGenericErrorFunc: (ctx: any, handler: {}) => any, xmlThrDefSetStructuredErrorFunc: (ctx: any, handler: {}) => any, xmlThrDefSubstituteEntitiesDefaultValue: (v: number) => number, xmlThrDefTreeIndentString: (v: string | Buffer | null) => string, xmlUCSIsAegeanNumbers: (code: number) => number, xmlUCSIsAlphabeticPresentationForms: (code: number) => number, xmlUCSIsArabic: (code: number) => number, xmlUCSIsArabicPresentationFormsA: (code: number) => number, xmlUCSIsArabicPresentationFormsB: (code: number) => number, xmlUCSIsArmenian: (code: number) => number, xmlUCSIsArrows: (code: number) => number, xmlUCSIsBasicLatin: (code: number) => number, xmlUCSIsBengali: (code: number) => number, xmlUCSIsBlock: (code: number, block: string | Buffer | null) => number, xmlUCSIsBlockElements: (code: number) => number, xmlUCSIsBopomofo: (code: number) => number, xmlUCSIsBopomofoExtended: (code: number) => number, xmlUCSIsBoxDrawing: (code: number) => number, xmlUCSIsBraillePatterns: (code: number) => number, xmlUCSIsBuhid: (code: number) => number, xmlUCSIsByzantineMusicalSymbols: (code: number) => number, xmlUCSIsCJKCompatibility: (code: number) => number, xmlUCSIsCJKCompatibilityForms: (code: number) => number, xmlUCSIsCJKCompatibilityIdeographs: (code: number) => number, xmlUCSIsCJKCompatibilityIdeographsSupplement: (code: number) => number, xmlUCSIsCJKRadicalsSupplement: (code: number) => number, xmlUCSIsCJKSymbolsandPunctuation: (code: number) => number, xmlUCSIsCJKUnifiedIdeographs: (code: number) => number, xmlUCSIsCJKUnifiedIdeographsExtensionA: (code: number) => number, xmlUCSIsCJKUnifiedIdeographsExtensionB: (code: number) => number, xmlUCSIsCat: (code: number, cat: string | Buffer | null) => number, xmlUCSIsCatC: (code: number) => number, xmlUCSIsCatCc: (code: number) => number, xmlUCSIsCatCf: (code: number) => number, xmlUCSIsCatCo: (code: number) => number, xmlUCSIsCatCs: (code: number) => number, xmlUCSIsCatL: (code: number) => number, xmlUCSIsCatLl: (code: number) => number, xmlUCSIsCatLm: (code: number) => number, xmlUCSIsCatLo: (code: number) => number, xmlUCSIsCatLt: (code: number) => number, xmlUCSIsCatLu: (code: number) => number, xmlUCSIsCatM: (code: number) => number, xmlUCSIsCatMc: (code: number) => number, xmlUCSIsCatMe: (code: number) => number, xmlUCSIsCatMn: (code: number) => number, xmlUCSIsCatN: (code: number) => number, xmlUCSIsCatNd: (code: number) => number, xmlUCSIsCatNl: (code: number) => number, xmlUCSIsCatNo: (code: number) => number, xmlUCSIsCatP: (code: number) => number, xmlUCSIsCatPc: (code: number) => number, xmlUCSIsCatPd: (code: number) => number, xmlUCSIsCatPe: (code: number) => number, xmlUCSIsCatPf: (code: number) => number, xmlUCSIsCatPi: (code: number) => number, xmlUCSIsCatPo: (code: number) => number, xmlUCSIsCatPs: (code: number) => number, xmlUCSIsCatS: (code: number) => number, xmlUCSIsCatSc: (code: number) => number, xmlUCSIsCatSk: (code: number) => number, xmlUCSIsCatSm: (code: number) => number, xmlUCSIsCatSo: (code: number) => number, xmlUCSIsCatZ: (code: number) => number, xmlUCSIsCatZl: (code: number) => number, xmlUCSIsCatZp: (code: number) => number, xmlUCSIsCatZs: (code: number) => number, xmlUCSIsCherokee: (code: number) => number, xmlUCSIsCombiningDiacriticalMarks: (code: number) => number, xmlUCSIsCombiningDiacriticalMarksforSymbols: (code: number) => number, xmlUCSIsCombiningHalfMarks: (code: number) => number, xmlUCSIsCombiningMarksforSymbols: (code: number) => number, xmlUCSIsControlPictures: (code: number) => number, xmlUCSIsCurrencySymbols: (code: number) => number, xmlUCSIsCypriotSyllabary: (code: number) => number, xmlUCSIsCyrillic: (code: number) => number, xmlUCSIsCyrillicSupplement: (code: number) => number, xmlUCSIsDeseret: (code: number) => number, xmlUCSIsDevanagari: (code: number) => number, xmlUCSIsDingbats: (code: number) => number, xmlUCSIsEnclosedAlphanumerics: (code: number) => number, xmlUCSIsEnclosedCJKLettersandMonths: (code: number) => number, xmlUCSIsEthiopic: (code: number) => number, xmlUCSIsGeneralPunctuation: (code: number) => number, xmlUCSIsGeometricShapes: (code: number) => number, xmlUCSIsGeorgian: (code: number) => number, xmlUCSIsGothic: (code: number) => number, xmlUCSIsGreek: (code: number) => number, xmlUCSIsGreekExtended: (code: number) => number, xmlUCSIsGreekandCoptic: (code: number) => number, xmlUCSIsGujarati: (code: number) => number, xmlUCSIsGurmukhi: (code: number) => number, xmlUCSIsHalfwidthandFullwidthForms: (code: number) => number, xmlUCSIsHangulCompatibilityJamo: (code: number) => number, xmlUCSIsHangulJamo: (code: number) => number, xmlUCSIsHangulSyllables: (code: number) => number, xmlUCSIsHanunoo: (code: number) => number, xmlUCSIsHebrew: (code: number) => number, xmlUCSIsHighPrivateUseSurrogates: (code: number) => number, xmlUCSIsHighSurrogates: (code: number) => number, xmlUCSIsHiragana: (code: number) => number, xmlUCSIsIPAExtensions: (code: number) => number, xmlUCSIsIdeographicDescriptionCharacters: (code: number) => number, xmlUCSIsKanbun: (code: number) => number, xmlUCSIsKangxiRadicals: (code: number) => number, xmlUCSIsKannada: (code: number) => number, xmlUCSIsKatakana: (code: number) => number, xmlUCSIsKatakanaPhoneticExtensions: (code: number) => number, xmlUCSIsKhmer: (code: number) => number, xmlUCSIsKhmerSymbols: (code: number) => number, xmlUCSIsLao: (code: number) => number, xmlUCSIsLatin1Supplement: (code: number) => number, xmlUCSIsLatinExtendedA: (code: number) => number, xmlUCSIsLatinExtendedAdditional: (code: number) => number, xmlUCSIsLatinExtendedB: (code: number) => number, xmlUCSIsLetterlikeSymbols: (code: number) => number, xmlUCSIsLimbu: (code: number) => number, xmlUCSIsLinearBIdeograms: (code: number) => number, xmlUCSIsLinearBSyllabary: (code: number) => number, xmlUCSIsLowSurrogates: (code: number) => number, xmlUCSIsMalayalam: (code: number) => number, xmlUCSIsMathematicalAlphanumericSymbols: (code: number) => number, xmlUCSIsMathematicalOperators: (code: number) => number, xmlUCSIsMiscellaneousMathematicalSymbolsA: (code: number) => number, xmlUCSIsMiscellaneousMathematicalSymbolsB: (code: number) => number, xmlUCSIsMiscellaneousSymbols: (code: number) => number, xmlUCSIsMiscellaneousSymbolsandArrows: (code: number) => number, xmlUCSIsMiscellaneousTechnical: (code: number) => number, xmlUCSIsMongolian: (code: number) => number, xmlUCSIsMusicalSymbols: (code: number) => number, xmlUCSIsMyanmar: (code: number) => number, xmlUCSIsNumberForms: (code: number) => number, xmlUCSIsOgham: (code: number) => number, xmlUCSIsOldItalic: (code: number) => number, xmlUCSIsOpticalCharacterRecognition: (code: number) => number, xmlUCSIsOriya: (code: number) => number, xmlUCSIsOsmanya: (code: number) => number, xmlUCSIsPhoneticExtensions: (code: number) => number, xmlUCSIsPrivateUse: (code: number) => number, xmlUCSIsPrivateUseArea: (code: number) => number, xmlUCSIsRunic: (code: number) => number, xmlUCSIsShavian: (code: number) => number, xmlUCSIsSinhala: (code: number) => number, xmlUCSIsSmallFormVariants: (code: number) => number, xmlUCSIsSpacingModifierLetters: (code: number) => number, xmlUCSIsSpecials: (code: number) => number, xmlUCSIsSuperscriptsandSubscripts: (code: number) => number, xmlUCSIsSupplementalArrowsA: (code: number) => number, xmlUCSIsSupplementalArrowsB: (code: number) => number, xmlUCSIsSupplementalMathematicalOperators: (code: number) => number, xmlUCSIsSupplementaryPrivateUseAreaA: (code: number) => number, xmlUCSIsSupplementaryPrivateUseAreaB: (code: number) => number, xmlUCSIsSyriac: (code: number) => number, xmlUCSIsTagalog: (code: number) => number, xmlUCSIsTagbanwa: (code: number) => number, xmlUCSIsTags: (code: number) => number, xmlUCSIsTaiLe: (code: number) => number, xmlUCSIsTaiXuanJingSymbols: (code: number) => number, xmlUCSIsTamil: (code: number) => number, xmlUCSIsTelugu: (code: number) => number, xmlUCSIsThaana: (code: number) => number, xmlUCSIsThai: (code: number) => number, xmlUCSIsTibetan: (code: number) => number, xmlUCSIsUgaritic: (code: number) => number, xmlUCSIsUnifiedCanadianAboriginalSyllabics: (code: number) => number, xmlUCSIsVariationSelectors: (code: number) => number, xmlUCSIsVariationSelectorsSupplement: (code: number) => number, xmlUCSIsYiRadicals: (code: number) => number, xmlUCSIsYiSyllables: (code: number) => number, xmlUCSIsYijingHexagramSymbols: (code: number) => number, xmlURIEscape: (str: string | Buffer | null) => string, xmlURIEscapeStr: (str: string | Buffer | null, list: string | Buffer | null) => string, xmlURIUnescapeString: (str: string | Buffer | null, len: number, target: string | Buffer | null) => string, xmlUTF8Charcmp: (utf1: string | Buffer | null, utf2: string | Buffer | null) => number, xmlUTF8Size: (utf: string | Buffer | null) => number, xmlUTF8Strlen: (utf: string | Buffer | null) => number, xmlUTF8Strloc: (utf: string | Buffer | null, utfchar: string | Buffer | null) => number, xmlUTF8Strndup: (utf: string | Buffer | null, len: number) => string, xmlUTF8Strpos: (utf: string | Buffer | null, pos: number) => string, xmlUTF8Strsize: (utf: string | Buffer | null, len: number) => number, xmlUTF8Strsub: (utf: string | Buffer | null, start: number, len: number) => string, xmlUnlinkNode: (cur: import("./types").xmlNodePtr | null) => any, xmlUnlockLibrary: () => any, xmlUnsetNsProp: (node: import("./types").xmlNodePtr | null, ns: import("./types").xmlNsPtr | null, name: string | Buffer | null) => number, xmlUnsetProp: (node: import("./types").xmlNodePtr | null, name: string | Buffer | null) => number, xmlValidBuildContentModel: (ctxt: import("./types").xmlValidCtxtPtr | null, elem: import("./types").xmlElementPtr | null) => number, xmlValidCtxtNormalizeAttributeValue: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlNodePtr | null, name: string | Buffer | null, value: string | Buffer | null) => string, xmlValidGetPotentialChildren: (ctree: {}, names: string | Buffer | null, len: number, max: number) => number, xmlValidGetValidElements: (prev: {}, next: {}, names: string | Buffer | null, max: number) => number, xmlValidNormalizeAttributeValue: (doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlNodePtr | null, name: string | Buffer | null, value: string | Buffer | null) => string, xmlValidateAttributeDecl: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, attr: import("./types").xmlAttributePtr | null) => number, xmlValidateAttributeValue: (type: {}, value: string | Buffer | null) => number, xmlValidateDocument: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null) => number, xmlValidateDocumentFinal: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null) => number, xmlValidateDtd: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, dtd: import("./types").xmlDtdPtr | null) => number, xmlValidateDtdFinal: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null) => number, xmlValidateElement: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlNodePtr | null) => number, xmlValidateElementDecl: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlElementPtr | null) => number, xmlValidateNCName: (value: string | Buffer | null, space: number) => number, xmlValidateNMToken: (value: string | Buffer | null, space: number) => number, xmlValidateName: (value: string | Buffer | null, space: number) => number, xmlValidateNameValue: (value: string | Buffer | null) => number, xmlValidateNamesValue: (value: string | Buffer | null) => number, xmlValidateNmtokenValue: (value: string | Buffer | null) => number, xmlValidateNmtokensValue: (value: string | Buffer | null) => number, xmlValidateNotationDecl: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, nota: import("./types").xmlNotationPtr | null) => number, xmlValidateNotationUse: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, notationName: string | Buffer | null) => number, xmlValidateOneAttribute: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlNodePtr | null, attr: import("./types").xmlAttrPtr | null, value: string | Buffer | null) => number, xmlValidateOneElement: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlNodePtr | null) => number, xmlValidateOneNamespace: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlNodePtr | null, prefix: string | Buffer | null, ns: import("./types").xmlNsPtr | null, value: string | Buffer | null) => number, xmlValidatePopElement: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlNodePtr | null, qname: string | Buffer | null) => number, xmlValidatePushCData: (ctxt: import("./types").xmlValidCtxtPtr | null, data: string | Buffer | null, len: number) => number, xmlValidatePushElement: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null, elem: import("./types").xmlNodePtr | null, qname: string | Buffer | null) => number, xmlValidateQName: (value: string | Buffer | null, space: number) => number, xmlValidateRoot: (ctxt: import("./types").xmlValidCtxtPtr | null, doc: import("./types").xmlDocPtr | null) => number, xmlXPathAddValues: (ctxt: import("./types").xmlXPathParserContextPtr | null) => any, xmlXPathBooleanFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathCastBooleanToNumber: (val: number) => number, xmlXPathCastBooleanToString: (val: number) => string, xmlXPathCastNodeSetToBoolean: (ns: import("./types").xmlNodePtr[]) => number, xmlXPathCastNodeSetToNumber: (ns: import("./types").xmlNodePtr[]) => number, xmlXPathCastNodeSetToString: (ns: import("./types").xmlNodePtr[]) => string, xmlXPathCastNodeToNumber: (node: import("./types").xmlNodePtr | null) => number, xmlXPathCastNodeToString: (node: import("./types").xmlNodePtr | null) => string, xmlXPathCastNumberToBoolean: (val: number) => number, xmlXPathCastNumberToString: (val: number) => string, xmlXPathCastStringToBoolean: (val: string | Buffer | null) => number, xmlXPathCastStringToNumber: (val: string | Buffer | null) => number, xmlXPathCastToBoolean: (val: import("./types").xmlXPathObjectPtr | null) => number, xmlXPathCastToNumber: (val: import("./types").xmlXPathObjectPtr | null) => number, xmlXPathCastToString: (val: import("./types").xmlXPathObjectPtr | null) => string, xmlXPathCeilingFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathCmpNodes: (node1: import("./types").xmlNodePtr | null, node2: import("./types").xmlNodePtr | null) => number, xmlXPathCompareValues: (ctxt: import("./types").xmlXPathParserContextPtr | null, inf: number, strict: number) => number, xmlXPathCompile: (str: string | Buffer | null) => import("./types").xmlXPathCompExprPtr, xmlXPathCompiledEval: (comp: import("./types").xmlXPathCompExprPtr | null, ctx: import("./types").xmlXPathContextPtr | null) => import("./types").xmlXPathObjectPtr, xmlXPathCompiledEvalToBoolean: (comp: import("./types").xmlXPathCompExprPtr | null, ctxt: import("./types").xmlXPathContextPtr | null) => number, xmlXPathConcatFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathContainsFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathContextSetCache: (ctxt: import("./types").xmlXPathContextPtr | null, active: number, value: number, options: number) => number, xmlXPathConvertBoolean: (val: import("./types").xmlXPathObjectPtr | null) => import("./types").xmlXPathObjectPtr, xmlXPathConvertNumber: (val: import("./types").xmlXPathObjectPtr | null) => import("./types").xmlXPathObjectPtr, xmlXPathConvertString: (val: import("./types").xmlXPathObjectPtr | null) => import("./types").xmlXPathObjectPtr, xmlXPathCountFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathCtxtCompile: (ctxt: import("./types").xmlXPathContextPtr | null, str: string | Buffer | null) => import("./types").xmlXPathCompExprPtr, xmlXPathDifference: (nodes1: import("./types").xmlNodePtr[], nodes2: import("./types").xmlNodePtr[]) => import("./types").xmlNodePtr[], xmlXPathDistinct: (nodes: import("./types").xmlNodePtr[]) => import("./types").xmlNodePtr[], xmlXPathDistinctSorted: (nodes: import("./types").xmlNodePtr[]) => import("./types").xmlNodePtr[], xmlXPathDivValues: (ctxt: import("./types").xmlXPathParserContextPtr | null) => any, xmlXPathEqualValues: (ctxt: import("./types").xmlXPathParserContextPtr | null) => number, xmlXPathErr: (ctxt: import("./types").xmlXPathParserContextPtr | null, error: number) => any, xmlXPathEval: (str: string | Buffer | null, ctx: import("./types").xmlXPathContextPtr | null) => import("./types").xmlXPathObjectPtr, xmlXPathEvalExpr: (ctxt: import("./types").xmlXPathParserContextPtr | null) => any, xmlXPathEvalExpression: (str: string | Buffer | null, ctxt: import("./types").xmlXPathContextPtr | null) => import("./types").xmlXPathObjectPtr, xmlXPathEvalPredicate: (ctxt: import("./types").xmlXPathContextPtr | null, res: import("./types").xmlXPathObjectPtr | null) => number, xmlXPathEvaluatePredicateResult: (ctxt: import("./types").xmlXPathParserContextPtr | null, res: import("./types").xmlXPathObjectPtr | null) => number, xmlXPathFalseFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathFloorFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathFreeCompExpr: (comp: import("./types").xmlXPathCompExprPtr | null) => any, xmlXPathFreeContext: (ctxt: import("./types").xmlXPathContextPtr | null) => any, xmlXPathFreeNodeSet: (obj: import("./types").xmlNodePtr[]) => any, xmlXPathFreeNodeSetList: (obj: import("./types").xmlXPathObjectPtr | null) => any, xmlXPathFreeObject: (obj: import("./types").xmlXPathObjectPtr | null) => any, xmlXPathFreeParserContext: (ctxt: import("./types").xmlXPathParserContextPtr | null) => any, xmlXPathFunctionLookup: (ctxt: import("./types").xmlXPathContextPtr | null, name: string | Buffer | null) => {}, xmlXPathFunctionLookupNS: (ctxt: import("./types").xmlXPathContextPtr | null, name: string | Buffer | null, ns_uri: string | Buffer | null) => {}, xmlXPathHasSameNodes: (nodes1: import("./types").xmlNodePtr[], nodes2: import("./types").xmlNodePtr[]) => number, xmlXPathIdFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathInit: () => any, xmlXPathIntersection: (nodes1: import("./types").xmlNodePtr[], nodes2: import("./types").xmlNodePtr[]) => import("./types").xmlNodePtr[], xmlXPathIsInf: (val: number) => number, xmlXPathIsNaN: (val: number) => number, xmlXPathIsNodeType: (name: string | Buffer | null) => number, xmlXPathLangFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathLastFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathLeading: (nodes1: import("./types").xmlNodePtr[], nodes2: import("./types").xmlNodePtr[]) => import("./types").xmlNodePtr[], xmlXPathLeadingSorted: (nodes1: import("./types").xmlNodePtr[], nodes2: import("./types").xmlNodePtr[]) => import("./types").xmlNodePtr[], xmlXPathLocalNameFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathModValues: (ctxt: import("./types").xmlXPathParserContextPtr | null) => any, xmlXPathMultValues: (ctxt: import("./types").xmlXPathParserContextPtr | null) => any, xmlXPathNamespaceURIFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathNewBoolean: (val: number) => import("./types").xmlXPathObjectPtr, xmlXPathNewCString: (val: string | Buffer | null) => import("./types").xmlXPathObjectPtr, xmlXPathNewContext: (doc: import("./types").xmlDocPtr | null) => import("./types").xmlXPathContextPtr, xmlXPathNewFloat: (val: number) => import("./types").xmlXPathObjectPtr, xmlXPathNewNodeSet: (val: import("./types").xmlNodePtr | null) => import("./types").xmlXPathObjectPtr, xmlXPathNewNodeSetList: (val: import("./types").xmlNodePtr[]) => import("./types").xmlXPathObjectPtr, xmlXPathNewParserContext: (str: string | Buffer | null, ctxt: import("./types").xmlXPathContextPtr | null) => import("./types").xmlXPathParserContextPtr, xmlXPathNewString: (val: string | Buffer | null) => import("./types").xmlXPathObjectPtr, xmlXPathNewValueTree: (val: import("./types").xmlNodePtr | null) => import("./types").xmlXPathObjectPtr, xmlXPathNextAncestor: (ctxt: import("./types").xmlXPathParserContextPtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlXPathNextAncestorOrSelf: (ctxt: import("./types").xmlXPathParserContextPtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlXPathNextAttribute: (ctxt: import("./types").xmlXPathParserContextPtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlXPathNextChild: (ctxt: import("./types").xmlXPathParserContextPtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlXPathNextDescendant: (ctxt: import("./types").xmlXPathParserContextPtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlXPathNextDescendantOrSelf: (ctxt: import("./types").xmlXPathParserContextPtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlXPathNextFollowing: (ctxt: import("./types").xmlXPathParserContextPtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlXPathNextFollowingSibling: (ctxt: import("./types").xmlXPathParserContextPtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlXPathNextNamespace: (ctxt: import("./types").xmlXPathParserContextPtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlXPathNextParent: (ctxt: import("./types").xmlXPathParserContextPtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlXPathNextPreceding: (ctxt: import("./types").xmlXPathParserContextPtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlXPathNextPrecedingSibling: (ctxt: import("./types").xmlXPathParserContextPtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlXPathNextSelf: (ctxt: import("./types").xmlXPathParserContextPtr | null, cur: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr | null, xmlXPathNodeEval: (node: import("./types").xmlNodePtr | null, str: string | Buffer | null, ctx: import("./types").xmlXPathContextPtr | null) => import("./types").xmlXPathObjectPtr, xmlXPathNodeLeading: (nodes: import("./types").xmlNodePtr[], node: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr[], xmlXPathNodeLeadingSorted: (nodes: import("./types").xmlNodePtr[], node: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr[], xmlXPathNodeSetAdd: (cur: import("./types").xmlNodePtr[], val: import("./types").xmlNodePtr | null) => number, xmlXPathNodeSetAddNs: (cur: import("./types").xmlNodePtr[], node: import("./types").xmlNodePtr | null, ns: import("./types").xmlNsPtr | null) => number, xmlXPathNodeSetAddUnique: (cur: import("./types").xmlNodePtr[], val: import("./types").xmlNodePtr | null) => number, xmlXPathNodeSetContains: (cur: import("./types").xmlNodePtr[], val: import("./types").xmlNodePtr | null) => number, xmlXPathNodeSetCreate: (val: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr[], xmlXPathNodeSetDel: (cur: import("./types").xmlNodePtr[], val: import("./types").xmlNodePtr | null) => any, xmlXPathNodeSetFreeNs: (ns: import("./types").xmlNsPtr | null) => any, xmlXPathNodeSetMerge: (val1: import("./types").xmlNodePtr[], val2: import("./types").xmlNodePtr[]) => import("./types").xmlNodePtr[], xmlXPathNodeSetRemove: (cur: import("./types").xmlNodePtr[], val: number) => any, xmlXPathNodeSetSort: (set: import("./types").xmlNodePtr[]) => any, xmlXPathNodeTrailing: (nodes: import("./types").xmlNodePtr[], node: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr[], xmlXPathNodeTrailingSorted: (nodes: import("./types").xmlNodePtr[], node: import("./types").xmlNodePtr | null) => import("./types").xmlNodePtr[], xmlXPathNormalizeFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathNotEqualValues: (ctxt: import("./types").xmlXPathParserContextPtr | null) => number, xmlXPathNotFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathNsLookup: (ctxt: import("./types").xmlXPathContextPtr | null, prefix: string | Buffer | null) => string, xmlXPathNumberFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathObjectCopy: (val: import("./types").xmlXPathObjectPtr | null) => import("./types").xmlXPathObjectPtr, xmlXPathOrderDocElems: (doc: import("./types").xmlDocPtr | null) => number, xmlXPathParseNCName: (ctxt: import("./types").xmlXPathParserContextPtr | null) => string, xmlXPathParseName: (ctxt: import("./types").xmlXPathParserContextPtr | null) => string, xmlXPathPopBoolean: (ctxt: import("./types").xmlXPathParserContextPtr | null) => number, xmlXPathPopExternal: (ctxt: import("./types").xmlXPathParserContextPtr | null) => any, xmlXPathPopNodeSet: (ctxt: import("./types").xmlXPathParserContextPtr | null) => import("./types").xmlNodePtr[], xmlXPathPopNumber: (ctxt: import("./types").xmlXPathParserContextPtr | null) => number, xmlXPathPopString: (ctxt: import("./types").xmlXPathParserContextPtr | null) => string, xmlXPathPositionFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathRegisterAllFunctions: (ctxt: import("./types").xmlXPathContextPtr | null) => any, xmlXPathRegisterFunc: (ctxt: import("./types").xmlXPathContextPtr | null, name: string | Buffer | null, f: {}) => number, xmlXPathRegisterFuncLookup: (ctxt: import("./types").xmlXPathContextPtr | null, f: {}, funcCtxt: any) => any, xmlXPathRegisterFuncNS: (ctxt: import("./types").xmlXPathContextPtr | null, name: string | Buffer | null, ns_uri: string | Buffer | null, f: {}) => number, xmlXPathRegisterNs: (ctxt: import("./types").xmlXPathContextPtr | null, prefix: string | Buffer | null, ns_uri: string | Buffer | null) => number, xmlXPathRegisterVariable: (ctxt: import("./types").xmlXPathContextPtr | null, name: string | Buffer | null, value: import("./types").xmlXPathObjectPtr | null) => number, xmlXPathRegisterVariableLookup: (ctxt: import("./types").xmlXPathContextPtr | null, f: {}, data: any) => any, xmlXPathRegisterVariableNS: (ctxt: import("./types").xmlXPathContextPtr | null, name: string | Buffer | null, ns_uri: string | Buffer | null, value: import("./types").xmlXPathObjectPtr | null) => number, xmlXPathRegisteredFuncsCleanup: (ctxt: import("./types").xmlXPathContextPtr | null) => any, xmlXPathRegisteredNsCleanup: (ctxt: import("./types").xmlXPathContextPtr | null) => any, xmlXPathRegisteredVariablesCleanup: (ctxt: import("./types").xmlXPathContextPtr | null) => any, xmlXPathRoot: (ctxt: import("./types").xmlXPathParserContextPtr | null) => any, xmlXPathRoundFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathSetContextNode: (node: import("./types").xmlNodePtr | null, ctx: import("./types").xmlXPathContextPtr | null) => number, xmlXPathStartsWithFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathStringEvalNumber: (str: string | Buffer | null) => number, xmlXPathStringFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathStringLengthFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathSubValues: (ctxt: import("./types").xmlXPathParserContextPtr | null) => any, xmlXPathSubstringAfterFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathSubstringBeforeFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathSubstringFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathSumFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathTrailing: (nodes1: import("./types").xmlNodePtr[], nodes2: import("./types").xmlNodePtr[]) => import("./types").xmlNodePtr[], xmlXPathTrailingSorted: (nodes1: import("./types").xmlNodePtr[], nodes2: import("./types").xmlNodePtr[]) => import("./types").xmlNodePtr[], xmlXPathTranslateFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathTrueFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPathValueFlipSign: (ctxt: import("./types").xmlXPathParserContextPtr | null) => any, xmlXPathVariableLookup: (ctxt: import("./types").xmlXPathContextPtr | null, name: string | Buffer | null) => import("./types").xmlXPathObjectPtr, xmlXPathVariableLookupNS: (ctxt: import("./types").xmlXPathContextPtr | null, name: string | Buffer | null, ns_uri: string | Buffer | null) => import("./types").xmlXPathObjectPtr, xmlXPathWrapCString: (val: string | Buffer | null) => import("./types").xmlXPathObjectPtr, xmlXPathWrapExternal: (val: any) => import("./types").xmlXPathObjectPtr, xmlXPathWrapNodeSet: (val: import("./types").xmlNodePtr[]) => import("./types").xmlXPathObjectPtr, xmlXPathWrapString: (val: string | Buffer | null) => import("./types").xmlXPathObjectPtr, xmlXPatherror: (ctxt: import("./types").xmlXPathParserContextPtr | null, file: string | Buffer | null, line: number, no: number) => any, xmlXPtrBuildNodeList: (obj: import("./types").xmlXPathObjectPtr | null) => import("./types").xmlNodePtr | null, xmlXPtrEval: (str: string | Buffer | null, ctx: import("./types").xmlXPathContextPtr | null) => import("./types").xmlXPathObjectPtr, xmlXPtrEvalRangePredicate: (ctxt: import("./types").xmlXPathParserContextPtr | null) => any, xmlXPtrFreeLocationSet: (obj: import("./types").xmlLocationSetPtr | null) => any, xmlXPtrLocationSetAdd: (cur: import("./types").xmlLocationSetPtr | null, val: import("./types").xmlXPathObjectPtr | null) => any, xmlXPtrLocationSetCreate: (val: import("./types").xmlXPathObjectPtr | null) => import("./types").xmlLocationSetPtr, xmlXPtrLocationSetDel: (cur: import("./types").xmlLocationSetPtr | null, val: import("./types").xmlXPathObjectPtr | null) => any, xmlXPtrLocationSetMerge: (val1: import("./types").xmlLocationSetPtr | null, val2: import("./types").xmlLocationSetPtr | null) => import("./types").xmlLocationSetPtr, xmlXPtrLocationSetRemove: (cur: import("./types").xmlLocationSetPtr | null, val: number) => any, xmlXPtrNewCollapsedRange: (start: import("./types").xmlNodePtr | null) => import("./types").xmlXPathObjectPtr, xmlXPtrNewContext: (doc: import("./types").xmlDocPtr | null, here: import("./types").xmlNodePtr | null, origin: import("./types").xmlNodePtr | null) => import("./types").xmlXPathContextPtr, xmlXPtrNewLocationSetNodeSet: (set: import("./types").xmlNodePtr[]) => import("./types").xmlXPathObjectPtr, xmlXPtrNewLocationSetNodes: (start: import("./types").xmlNodePtr | null, end: import("./types").xmlNodePtr | null) => import("./types").xmlXPathObjectPtr, xmlXPtrNewRange: (start: import("./types").xmlNodePtr | null, startindex: number, end: import("./types").xmlNodePtr | null, endindex: number) => import("./types").xmlXPathObjectPtr, xmlXPtrNewRangeNodeObject: (start: import("./types").xmlNodePtr | null, end: import("./types").xmlXPathObjectPtr | null) => import("./types").xmlXPathObjectPtr, xmlXPtrNewRangeNodePoint: (start: import("./types").xmlNodePtr | null, end: import("./types").xmlXPathObjectPtr | null) => import("./types").xmlXPathObjectPtr, xmlXPtrNewRangeNodes: (start: import("./types").xmlNodePtr | null, end: import("./types").xmlNodePtr | null) => import("./types").xmlXPathObjectPtr, xmlXPtrNewRangePointNode: (start: import("./types").xmlXPathObjectPtr | null, end: import("./types").xmlNodePtr | null) => import("./types").xmlXPathObjectPtr, xmlXPtrNewRangePoints: (start: import("./types").xmlXPathObjectPtr | null, end: import("./types").xmlXPathObjectPtr | null) => import("./types").xmlXPathObjectPtr, xmlXPtrRangeToFunction: (ctxt: import("./types").xmlXPathParserContextPtr | null, nargs: number) => any, xmlXPtrWrapLocationSet: (val: import("./types").xmlLocationSetPtr | null) => import("./types").xmlXPathObjectPtr, fromBufferAsync: (type: import("..").FROM_BUFFER_ASYNC_TYPE, buffer: string | Buffer, size: number, URL: string, encoding: string, options: number, callback: Function) => import("./types").xmlDocPtr, xmlPtrToXmlNode: (arg0: any) => import("./types").xmlNodePtr, xmlPtrToXmlDoc: (arg0: any) => import("./types").xmlDocPtr, xmlPtrToXmlAttr: (arg0: any) => import("./types").xmlAttrPtr, xmlPtrToXmlElement: (arg0: any) => import("./types").xmlElementPtr, xmlPtrToXmlDtd: (arg0: any) => import("./types").xmlDtdPtr, xmlPtrToXmlNs: (arg0: any) => import("./types").xmlNsPtr, withStructuredErrors: <T>(callback: import("..").StructuredErrorCallback) => T, withGenericErrors: <T>(callback: import("..").GenericErrorCallback) => T;
